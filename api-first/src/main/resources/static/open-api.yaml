openapi: "3.0.0"
info:
  title: API-Platform-GroupLife
  description: |
    Documentación de API platafoma VidaGrupo para cotizadores web v2
  version: v1
  termsOfService: https://api-dev.segurossura.com.mx/terms-of-service
  contact:
    name: API responsible person
    url: https://api-dev.segurossura.com.mx/support
    email: api-support@segurossura.com.mx
  x-products:
    - id: vida-grupo
      name: vida grupo
      description: Producto vida grupo
  x-oauth:
    true
  x-authentication-basic:
    true
  x-full-description:
    full description
servers:
  # TODO: Add exception to doSonarAPI
  # - url: https://microcks-dev.segurossura.com.mx/rest/API-Template/v2
  #   description: Mock server
  - url: https://api-dev.segurossura.com.mx/api-platform-grouplife/v1
    description: Development server
  - url: https://api-qa.segurossura.com.mx/api-platform-grouplife/v1
    description: QA server
  - url: https://api.segurossura.com.mx/api-platform-grouplife/v1
    description: Production server
tags:
  - name: Monitoreo
    description: "Operaciones relacionadas al monitoreo"
  - name: LifeGroup
    description: Servicios de vida grupo
  - name: External
    description: Servicios transversale usados en vida grupo
security:
  - apiKeyHeader: [ ]
    oAuth2:
      - 3cd55b30-f7e9-4c5d-87c5-aa87b6b9278b
      - https://suramexicob2capimarketdev.onmicrosoft.com/3cd55b30-f7e9-4c5d-87c5-aa87b6b9278b/.default
paths:
  /status:
    get:
      summary: "API monitoreo de las apis"
      description: "Valida el estatus de las apis"
      operationId: getStatus
      tags:
        - Monitoreo
      responses:
        '200':
          description: respuesta status
          headers:
            strict-transport-security:
              description: 'Strict transport security header'
              schema:
                $ref: '#/components/schemas/strictTransportSecurityHeader'
            x-frame-options:
              description: 'Frame options header'
              schema:
                $ref: '#/components/schemas/xFrameOptionsHeader'
            x-content-type-options:
              description: 'Content type options header'
              schema:
                $ref: '#/components/schemas/xContentTypeOptionsHeader'
            content-security-policy:
              description: 'Content security policy header'
              schema:
                $ref: '#/components/schemas/contentSecurityPolicyHeader'
            referrer-policy:
              description: 'Referrer policy header'
              schema:
                $ref: '#/components/schemas/referrerPolicyHeader'
            permissions-policy:
              description: 'Permissions policy header'
              schema:
                $ref: '#/components/schemas/permissionsPolicyHeader'
            location:
              description: Location header
              schema:
                $ref: '#/components/schemas/locationHeader'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/standardResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/status'
              examples:
                Status:
                  $ref: '#/components/examples/statusResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '403':
          $ref: '#/components/responses/forbiddenResponse'
        '404':
          $ref: '#/components/responses/notFoundResponse'
        '429':
          $ref: '#/components/responses/tooManyRequestsResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
        '503':
          $ref: '#/components/responses/serviceUnavailableResponse'
        default:
          $ref: '#/components/responses/unexpectedErrorResponse'
  /business-activities:
    get:
      tags:
        - LifeGroup
      summary: Giros
      description: Listado de giros para vida grupo
      operationId: getBusinessActivities
      responses:
        200:
          description: Listado de giros
          headers:
            strict-transport-security:
              description: 'Strict transport security header'
              schema:
                $ref: '#/components/schemas/strictTransportSecurityHeader'
            x-frame-options:
              description: 'Frame options header'
              schema:
                $ref: '#/components/schemas/xFrameOptionsHeader'
            x-content-type-options:
              description: 'Content type options header'
              schema:
                $ref: '#/components/schemas/xContentTypeOptionsHeader'
            content-security-policy:
              description: 'Content security policy header'
              schema:
                $ref: '#/components/schemas/contentSecurityPolicyHeader'
            referrer-policy:
              description: 'Referrer policy header'
              schema:
                $ref: '#/components/schemas/referrerPolicyHeader'
            permissions-policy:
              description: 'Permissions policy header'
              schema:
                $ref: '#/components/schemas/permissionsPolicyHeader'
            location:
              description: Location header
              schema:
                $ref: '#/components/schemas/locationHeader'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/standardResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/ListCatalog'
              examples:
                DefaultResponseDtoListCatalogItem:
                  $ref: '#/components/examples/DefaultResponseDtoListCatalogItem'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '403':
          $ref: '#/components/responses/forbiddenResponse'
        '404':
          $ref: '#/components/responses/notFoundResponse'
        '406':
          $ref: '#/components/responses/notAcceptableResponse'
        '415':
          $ref: '#/components/responses/unsupportedMediaTypeResponse'
        '429':
          $ref: '#/components/responses/tooManyRequestsResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
        '503':
          $ref: '#/components/responses/serviceUnavailableResponse'
        default:
          $ref: '#/components/responses/unexpectedErrorResponse'
  /plans:
    get:
      tags:
        - LifeGroup
      summary: Obtiene planes por modalidad
      description: Listado de planes de coberturas para vida grupo por su modalidad
      operationId: coveragePlans
      parameters:
        - name: modality
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/modality'
      responses:
        '200':
          description: Listado de planes
          headers:
            strict-transport-security:
              description: 'Strict transport security header'
              schema:
                $ref: '#/components/schemas/strictTransportSecurityHeader'
            x-frame-options:
              description: 'Frame options header'
              schema:
                $ref: '#/components/schemas/xFrameOptionsHeader'
            x-content-type-options:
              description: 'Content type options header'
              schema:
                $ref: '#/components/schemas/xContentTypeOptionsHeader'
            content-security-policy:
              description: 'Content security policy header'
              schema:
                $ref: '#/components/schemas/contentSecurityPolicyHeader'
            referrer-policy:
              description: 'Referrer policy header'
              schema:
                $ref: '#/components/schemas/referrerPolicyHeader'
            permissions-policy:
              description: 'Permissions policy header'
              schema:
                $ref: '#/components/schemas/permissionsPolicyHeader'
            location:
              description: Location header
              schema:
                $ref: '#/components/schemas/locationHeader'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/standardResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/ListPlan'
              examples:
                ListPlanResponse:
                  $ref: '#/components/examples/ListPlanResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '403':
          $ref: '#/components/responses/forbiddenResponse'
        '404':
          $ref: '#/components/responses/notFoundResponse'
        '406':
          $ref: '#/components/responses/notAcceptableResponse'
        '415':
          $ref: '#/components/responses/unsupportedMediaTypeResponse'
        '429':
          $ref: '#/components/responses/tooManyRequestsResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
        '503':
          $ref: '#/components/responses/serviceUnavailableResponse'
        default:
          $ref: '#/components/responses/unexpectedErrorResponse'
  /coverages:
    get:
      tags:
        - LifeGroup
      summary: Obtiene coberturas por modalidad
      description: Devuelve la lista de coberturas de seguro según la modalidad especificada
      operationId: getCoveragesByModality
      parameters:
        - name: modality
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/modality'
      responses:
        200:
          description: Obtener lista de coberturas de seguro por modalidad
          headers:
            strict-transport-security:
              description: 'Strict transport security header'
              schema:
                $ref: '#/components/schemas/strictTransportSecurityHeader'
            x-frame-options:
              description: 'Frame options header'
              schema:
                $ref: '#/components/schemas/xFrameOptionsHeader'
            x-content-type-options:
              description: 'Content type options header'
              schema:
                $ref: '#/components/schemas/xContentTypeOptionsHeader'
            content-security-policy:
              description: 'Content security policy header'
              schema:
                $ref: '#/components/schemas/contentSecurityPolicyHeader'
            referrer-policy:
              description: 'Referrer policy header'
              schema:
                $ref: '#/components/schemas/referrerPolicyHeader'
            permissions-policy:
              description: 'Permissions policy header'
              schema:
                $ref: '#/components/schemas/permissionsPolicyHeader'
            location:
              description: Location header
              schema:
                $ref: '#/components/schemas/locationHeader'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/standardResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/CoverageDetail'
              examples:
                CoveragesByModalityResponse:
                  $ref: '#/components/examples/CoveragesByModalityResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '403':
          $ref: '#/components/responses/forbiddenResponse'
        '404':
          $ref: '#/components/responses/notFoundResponse'
        '406':
          $ref: '#/components/responses/notAcceptableResponse'
        '415':
          $ref: '#/components/responses/unsupportedMediaTypeResponse'
        '429':
          $ref: '#/components/responses/tooManyRequestsResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
        '503':
          $ref: '#/components/responses/serviceUnavailableResponse'
        default:
          $ref: '#/components/responses/unexpectedErrorResponse'
  /folio:
    get:
      tags:
        - LifeGroup
      summary: Generación del folio
      description: generar el folio
      operationId: getFolioSequence
      responses:
        200:
          description: Folio generado
          headers:
            strict-transport-security:
              description: 'Strict transport security header'
              schema:
                $ref: '#/components/schemas/strictTransportSecurityHeader'
            x-frame-options:
              description: 'Frame options header'
              schema:
                $ref: '#/components/schemas/xFrameOptionsHeader'
            x-content-type-options:
              description: 'Content type options header'
              schema:
                $ref: '#/components/schemas/xContentTypeOptionsHeader'
            content-security-policy:
              description: 'Content security policy header'
              schema:
                $ref: '#/components/schemas/contentSecurityPolicyHeader'
            referrer-policy:
              description: 'Referrer policy header'
              schema:
                $ref: '#/components/schemas/referrerPolicyHeader'
            permissions-policy:
              description: 'Permissions policy header'
              schema:
                $ref: '#/components/schemas/permissionsPolicyHeader'
            location:
              description: Location header
              schema:
                $ref: '#/components/schemas/locationHeader'
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Folio'
              examples:
                FolioResponse:
                  value:
                    data:
                      numberFolio: 234
                      key: key
                      ally: ally
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '403':
          $ref: '#/components/responses/forbiddenResponse'
        '404':
          $ref: '#/components/responses/notFoundResponse'
        '406':
          $ref: '#/components/responses/notAcceptableResponse'
        '413':
          $ref: '#/components/responses/payloadTooLargeResponse'
        '415':
          $ref: '#/components/responses/unsupportedMediaTypeResponse'
        '429':
          $ref: '#/components/responses/tooManyRequestsResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
        '503':
          $ref: '#/components/responses/serviceUnavailableResponse'
        default:
          $ref: '#/components/responses/unexpectedErrorResponse'
    post:
      tags:
        - LifeGroup
      summary: Creación del folio
      description: Crea el folio para manejar la persistencia
      operationId: createFolio
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FolioRequest'
            examples:
              FolioRequest:
                $ref: '#/components/examples/FolioRequest'
      responses:
        201:
          description: Folio creado
          headers:
            strict-transport-security:
              description: 'Strict transport security header'
              schema:
                $ref: '#/components/schemas/strictTransportSecurityHeader'
            x-frame-options:
              description: 'Frame options header'
              schema:
                $ref: '#/components/schemas/xFrameOptionsHeader'
            x-content-type-options:
              description: 'Content type options header'
              schema:
                $ref: '#/components/schemas/xContentTypeOptionsHeader'
            content-security-policy:
              description: 'Content security policy header'
              schema:
                $ref: '#/components/schemas/contentSecurityPolicyHeader'
            referrer-policy:
              description: 'Referrer policy header'
              schema:
                $ref: '#/components/schemas/referrerPolicyHeader'
            permissions-policy:
              description: 'Permissions policy header'
              schema:
                $ref: '#/components/schemas/permissionsPolicyHeader'
            location:
              description: Location header
              schema:
                $ref: '#/components/schemas/locationHeader'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/standardResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/FolioRecord'
              examples:
                numberFoiio:
                  value:
                    data:
                      numberFolio: '23'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '403':
          $ref: '#/components/responses/forbiddenResponse'
        '404':
          $ref: '#/components/responses/notFoundResponse'
        '406':
          $ref: '#/components/responses/notAcceptableResponse'
        '413':
          $ref: '#/components/responses/payloadTooLargeResponse'
        '415':
          $ref: '#/components/responses/unsupportedMediaTypeResponse'
        '429':
          $ref: '#/components/responses/tooManyRequestsResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
        '503':
          $ref: '#/components/responses/serviceUnavailableResponse'
        default:
          $ref: '#/components/responses/unexpectedErrorResponse'
  /components:
    post:
      tags:
        - LifeGroup
      summary: Crea/Actualiza persistencia de componentes usados del front
      description: Crea la persistencia manejada por los componentes del front asociada al folio
      operationId: createUpdateComponentPersistence
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Component'
            examples:
              ComponentPersistence:
                $ref: '#/components/examples/componentRequest'
      responses:
        200:
          description: Persistencia creada
          headers:
            strict-transport-security:
              description: 'Strict transport security header'
              schema:
                $ref: '#/components/schemas/strictTransportSecurityHeader'
            x-frame-options:
              description: 'Frame options header'
              schema:
                $ref: '#/components/schemas/xFrameOptionsHeader'
            x-content-type-options:
              description: 'Content type options header'
              schema:
                $ref: '#/components/schemas/xContentTypeOptionsHeader'
            content-security-policy:
              description: 'Content security policy header'
              schema:
                $ref: '#/components/schemas/contentSecurityPolicyHeader'
            referrer-policy:
              description: 'Referrer policy header'
              schema:
                $ref: '#/components/schemas/referrerPolicyHeader'
            permissions-policy:
              description: 'Permissions policy header'
              schema:
                $ref: '#/components/schemas/permissionsPolicyHeader'
            location:
              description: Location header
              schema:
                $ref: '#/components/schemas/locationHeader'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/standardResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Component'
              examples:
                ComponentPersistenceResponse:
                  $ref: '#/components/examples/componentResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '403':
          $ref: '#/components/responses/forbiddenResponse'
        '404':
          $ref: '#/components/responses/notFoundResponse'
        '406':
          $ref: '#/components/responses/notAcceptableResponse'
        '413':
          $ref: '#/components/responses/payloadTooLargeResponse'
        '415':
          $ref: '#/components/responses/unsupportedMediaTypeResponse'
        '429':
          $ref: '#/components/responses/tooManyRequestsResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
        '503':
          $ref: '#/components/responses/serviceUnavailableResponse'
        default:
          $ref: '#/components/responses/unexpectedErrorResponse'
  /components/get:
    post:
      tags:
        - LifeGroup
      summary: Obtiene persistencia
      description: Obtiene la persistencia en base al token de recuperación de tramite
      operationId: getComponentPersistence
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecoverComponent'
            examples:
              RecoverComponentRequest:
                $ref: '#/components/examples/recoverComponentRequest'
      responses:
        200:
          description: Obtener persistencia de Folio
          headers:
            strict-transport-security:
              description: 'Strict transport security header'
              schema:
                $ref: '#/components/schemas/strictTransportSecurityHeader'
            x-frame-options:
              description: 'Frame options header'
              schema:
                $ref: '#/components/schemas/xFrameOptionsHeader'
            x-content-type-options:
              description: 'Content type options header'
              schema:
                $ref: '#/components/schemas/xContentTypeOptionsHeader'
            content-security-policy:
              description: 'Content security policy header'
              schema:
                $ref: '#/components/schemas/contentSecurityPolicyHeader'
            referrer-policy:
              description: 'Referrer policy header'
              schema:
                $ref: '#/components/schemas/referrerPolicyHeader'
            permissions-policy:
              description: 'Permissions policy header'
              schema:
                $ref: '#/components/schemas/permissionsPolicyHeader'
            location:
              description: Location header
              schema:
                $ref: '#/components/schemas/locationHeader'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/standardResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Component'
              examples:
                ComponentRecoverResponse:
                  $ref: '#/components/examples/componentResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '403':
          $ref: '#/components/responses/forbiddenResponse'
        '404':
          $ref: '#/components/responses/notFoundResponse'
        '406':
          $ref: '#/components/responses/notAcceptableResponse'
        '413':
          $ref: '#/components/responses/payloadTooLargeResponse'
        '415':
          $ref: '#/components/responses/unsupportedMediaTypeResponse'
        '429':
          $ref: '#/components/responses/tooManyRequestsResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
        '503':
          $ref: '#/components/responses/serviceUnavailableResponse'
        default:
          $ref: '#/components/responses/unexpectedErrorResponse'
  /folio/{numberFolio}/company:
    post:
      tags:
        - LifeGroup
      summary: Crear la compañía
      description: Creación de los datos de compañía asociados al folio
      operationId: createCompany
      parameters:
        - name: numberFolio
          in: path
          required: true
          description: El número de folio asociado a la persistencia
          schema:
            type: string
            description: id del folio
            example: '1006379'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyRequest'
            examples:
              CompanyRequest:
                $ref: '#/components/examples/CompanyRequest'
      responses:
        201:
          description: Compañía creada
          headers:
            strict-transport-security:
              description: 'Strict transport security header'
              schema:
                $ref: '#/components/schemas/strictTransportSecurityHeader'
            x-frame-options:
              description: 'Frame options header'
              schema:
                $ref: '#/components/schemas/xFrameOptionsHeader'
            x-content-type-options:
              description: 'Content type options header'
              schema:
                $ref: '#/components/schemas/xContentTypeOptionsHeader'
            content-security-policy:
              description: 'Content security policy header'
              schema:
                $ref: '#/components/schemas/contentSecurityPolicyHeader'
            referrer-policy:
              description: 'Referrer policy header'
              schema:
                $ref: '#/components/schemas/referrerPolicyHeader'
            permissions-policy:
              description: 'Permissions policy header'
              schema:
                $ref: '#/components/schemas/permissionsPolicyHeader'
            location:
              description: Location header
              schema:
                $ref: '#/components/schemas/locationHeader'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/standardResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/CompanyResponse'
              examples:
                companyCreated:
                  value:
                    $ref: '#/components/examples/DefaultCompanyResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '403':
          $ref: '#/components/responses/forbiddenResponse'
        '404':
          $ref: '#/components/responses/notFoundResponse'
        '406':
          $ref: '#/components/responses/notAcceptableResponse'
        '413':
          $ref: '#/components/responses/payloadTooLargeResponse'
        '415':
          $ref: '#/components/responses/unsupportedMediaTypeResponse'
        '429':
          $ref: '#/components/responses/tooManyRequestsResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
        '503':
          $ref: '#/components/responses/serviceUnavailableResponse'
        default:
          $ref: '#/components/responses/unexpectedErrorResponse'
  /quotation-details/{numberFolio}:
    patch:
      tags:
        - LifeGroup
      summary: Actualiza datos de la cotización
      description: Actualizacion de datos de la cotización que se encuentran en el sidebar
      operationId: updateQuotationDetails
      parameters:
        - name: numberFolio
          in: path
          required: true
          description: El número de folio asociado
          schema:
            $ref: '#/components/schemas/numberFolio'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateQuotationDetailsRequest'
            examples:
              CompanyRequest:
                $ref: '#/components/examples/UpdateQuotationDetailsRequest'
      responses:
        200:
          description: Fecha de inicio de vigencia actualizada
          headers:
            strict-transport-security:
              description: 'Strict transport security header'
              schema:
                $ref: '#/components/schemas/strictTransportSecurityHeader'
            x-frame-options:
              description: 'Frame options header'
              schema:
                $ref: '#/components/schemas/xFrameOptionsHeader'
            x-content-type-options:
              description: 'Content type options header'
              schema:
                $ref: '#/components/schemas/xContentTypeOptionsHeader'
            content-security-policy:
              description: 'Content security policy header'
              schema:
                $ref: '#/components/schemas/contentSecurityPolicyHeader'
            referrer-policy:
              description: 'Referrer policy header'
              schema:
                $ref: '#/components/schemas/referrerPolicyHeader'
            permissions-policy:
              description: 'Permissions policy header'
              schema:
                $ref: '#/components/schemas/permissionsPolicyHeader'
            location:
              description: Location header
              schema:
                $ref: '#/components/schemas/locationHeader'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/standardResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/standardResponseMessage'
              examples:
                effectiveDateUpdated:
                  value:
                    $ref: '#/components/examples/standardResponseMessage'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '403':
          $ref: '#/components/responses/forbiddenResponse'
        '404':
          $ref: '#/components/responses/notFoundResponse'
        '406':
          $ref: '#/components/responses/notAcceptableResponse'
        '413':
          $ref: '#/components/responses/payloadTooLargeResponse'
        '415':
          $ref: '#/components/responses/unsupportedMediaTypeResponse'
        '429':
          $ref: '#/components/responses/tooManyRequestsResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
        '503':
          $ref: '#/components/responses/serviceUnavailableResponse'
        default:
          $ref: '#/components/responses/unexpectedErrorResponse'
  /folio/{numberFolio}/groups:
    get:
      tags:
        - LifeGroup
      summary: Grupos
      description: Listado de grupos para la compañia
      operationId: getGroups
      parameters:
        - name: numberFolio
          in: path
          required: true
          description: El número de folio asociado a la compañía
          schema:
            type: string
            description: id del folio
            example: '1006379'
      responses:
        200:
          description: Listado de grupos
          headers:
            strict-transport-security:
              description: 'Strict transport security header'
              schema:
                $ref: '#/components/schemas/strictTransportSecurityHeader'
            x-frame-options:
              description: 'Frame options header'
              schema:
                $ref: '#/components/schemas/xFrameOptionsHeader'
            x-content-type-options:
              description: 'Content type options header'
              schema:
                $ref: '#/components/schemas/xContentTypeOptionsHeader'
            content-security-policy:
              description: 'Content security policy header'
              schema:
                $ref: '#/components/schemas/contentSecurityPolicyHeader'
            referrer-policy:
              description: 'Referrer policy header'
              schema:
                $ref: '#/components/schemas/referrerPolicyHeader'
            permissions-policy:
              description: 'Permissions policy header'
              schema:
                $ref: '#/components/schemas/permissionsPolicyHeader'
            location:
              description: Location header
              schema:
                $ref: '#/components/schemas/locationHeader'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/standardResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/ListGroups'
              examples:
                DefaultResponseDtoListCatalogItem:
                  $ref: '#/components/examples/DefaultResponseDtoLisGroups'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '403':
          $ref: '#/components/responses/forbiddenResponse'
        '404':
          $ref: '#/components/responses/notFoundResponse'
        '406':
          $ref: '#/components/responses/notAcceptableResponse'
        '415':
          $ref: '#/components/responses/unsupportedMediaTypeResponse'
        '429':
          $ref: '#/components/responses/tooManyRequestsResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
        '503':
          $ref: '#/components/responses/serviceUnavailableResponse'
        default:
          $ref: '#/components/responses/unexpectedErrorResponse'
    post:
      tags:
        - LifeGroup
      summary: Crear grupo
      description: Crear Grupo para la compañia con plan personalizado
      operationId: createGroup
      parameters:
        - name: numberFolio
          in: path
          required: true
          description: El número de folio asociado a la compañía
          schema:
            type: string
            description: id del folio
            example: '1006379'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupVgRequest'
            examples:
              GroupVgRequest:
                $ref: '#/components/examples/GroupVgRequest'
      responses:
        201:
          description: Grupo creado
          headers:
            strict-transport-security:
              description: 'Strict transport security header'
              schema:
                $ref: '#/components/schemas/strictTransportSecurityHeader'
            x-frame-options:
              description: 'Frame options header'
              schema:
                $ref: '#/components/schemas/xFrameOptionsHeader'
            x-content-type-options:
              description: 'Content type options header'
              schema:
                $ref: '#/components/schemas/xContentTypeOptionsHeader'
            content-security-policy:
              description: 'Content security policy header'
              schema:
                $ref: '#/components/schemas/contentSecurityPolicyHeader'
            referrer-policy:
              description: 'Referrer policy header'
              schema:
                $ref: '#/components/schemas/referrerPolicyHeader'
            permissions-policy:
              description: 'Permissions policy header'
              schema:
                $ref: '#/components/schemas/permissionsPolicyHeader'
            location:
              description: Location header
              schema:
                $ref: '#/components/schemas/locationHeader'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/standardResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/GroupVgResponse'
              examples:
                GroupVgResponse:
                  $ref: '#/components/examples/GroupVgResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '403':
          $ref: '#/components/responses/forbiddenResponse'
        '404':
          $ref: '#/components/responses/notFoundResponse'
        '406':
          $ref: '#/components/responses/notAcceptableResponse'
        '413':
          $ref: '#/components/responses/payloadTooLargeResponse'
        '415':
          $ref: '#/components/responses/unsupportedMediaTypeResponse'
        '429':
          $ref: '#/components/responses/tooManyRequestsResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
        '503':
          $ref: '#/components/responses/serviceUnavailableResponse'
        default:
          $ref: '#/components/responses/unexpectedErrorResponse'
  /folio/{numberFolio}:
    get:
      tags:
        - LifeGroup
      summary: Obtención del folio
      description: Obtener el folio
      operationId: getFolio
      parameters:
        - name: numberFolio
          in: path
          required: true
          description: El número de folio a obtener
          schema:
            $ref: '#/components/schemas/numberFolio'
      responses:
        200:
          description: Folio obtenido
          headers:
            strict-transport-security:
              description: 'Strict transport security header'
              schema:
                $ref: '#/components/schemas/strictTransportSecurityHeader'
            x-frame-options:
              description: 'Frame options header'
              schema:
                $ref: '#/components/schemas/xFrameOptionsHeader'
            x-content-type-options:
              description: 'Content type options header'
              schema:
                $ref: '#/components/schemas/xContentTypeOptionsHeader'
            content-security-policy:
              description: 'Content security policy header'
              schema:
                $ref: '#/components/schemas/contentSecurityPolicyHeader'
            referrer-policy:
              description: 'Referrer policy header'
              schema:
                $ref: '#/components/schemas/referrerPolicyHeader'
            permissions-policy:
              description: 'Permissions policy header'
              schema:
                $ref: '#/components/schemas/permissionsPolicyHeader'
            location:
              description: Location header
              schema:
                $ref: '#/components/schemas/locationHeader'
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/FolioData'
              examples:
                FolioResponse:
                  $ref: '#/components/examples/FolioResponseData'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '403':
          $ref: '#/components/responses/forbiddenResponse'
        '404':
          $ref: '#/components/responses/notFoundResponse'
        '406':
          $ref: '#/components/responses/notAcceptableResponse'
        '413':
          $ref: '#/components/responses/payloadTooLargeResponse'
        '415':
          $ref: '#/components/responses/unsupportedMediaTypeResponse'
        '429':
          $ref: '#/components/responses/tooManyRequestsResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
        '503':
          $ref: '#/components/responses/serviceUnavailableResponse'
        default:
          $ref: '#/components/responses/unexpectedErrorResponse'
  /folio/{numberFolio}/groups/{groupId}:
    delete:
      tags:
        - LifeGroup
      summary: Eliminar grupo
      description: Eliminar un grupo asociado a un folio específico
      operationId: deleteGroup
      parameters:
        - name: numberFolio
          in: path
          required: true
          description: El número de folio asociado a la compañía
          schema:
            type: string
            example: '1006379'
        - name: groupId
          in: path
          required: true
          description: ID del grupo que se desea eliminar
          schema:
            type: integer
            format: int32
            example: '1'
      responses:
        200:
          description: Grupo eliminado exitosamente
          headers:
            strict-transport-security:
              description: 'Strict transport security header'
              schema:
                $ref: '#/components/schemas/strictTransportSecurityHeader'
            x-frame-options:
              description: 'Frame options header'
              schema:
                $ref: '#/components/schemas/xFrameOptionsHeader'
            x-content-type-options:
              description: 'Content type options header'
              schema:
                $ref: '#/components/schemas/xContentTypeOptionsHeader'
            content-security-policy:
              description: 'Content security policy header'
              schema:
                $ref: '#/components/schemas/contentSecurityPolicyHeader'
            referrer-policy:
              description: 'Referrer policy header'
              schema:
                $ref: '#/components/schemas/referrerPolicyHeader'
            permissions-policy:
              description: 'Permissions policy header'
              schema:
                $ref: '#/components/schemas/permissionsPolicyHeader'
            location:
              description: Location header
              schema:
                $ref: '#/components/schemas/locationHeader'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/standardResponseMessage'
              examples:
                deleteGroup:
                  value:
                    message: "Successfully removed"
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '403':
          $ref: '#/components/responses/forbiddenResponse'
        '404':
          $ref: '#/components/responses/notFoundResponse'
        '406':
          $ref: '#/components/responses/notAcceptableResponse'
        '413':
          $ref: '#/components/responses/payloadTooLargeResponse'
        '415':
          $ref: '#/components/responses/unsupportedMediaTypeResponse'
        '429':
          $ref: '#/components/responses/tooManyRequestsResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
        '503':
          $ref: '#/components/responses/serviceUnavailableResponse'
        default:
          $ref: '#/components/responses/unexpectedErrorResponse'
  /folio/{numberFolio}/groups/{groupNumber}/upload:
    post:
      tags:
        - LifeGroup
      summary: Guardar salarios de los asegurados
      description: Guardar los salarios de los asegurados insertados en el layout
      operationId: uploadSalaryByGroup
      parameters:
        - name: numberFolio
          in: path
          required: true
          description: El número de folio asociado a la persistencia
          schema:
            type: string
            description: id del folio
            example: '1006379'
        - name: groupNumber
          in: path
          required: true
          description: ID del grupo donde agregaran los salarios
          schema:
            type: integer
            format: int32
            example: '1'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalaryRequest'
            examples:
              SalaryRequest:
                $ref: '#/components/examples/SalaryRequest'
      responses:
        200:
          description: Salarios guardados
          headers:
            strict-transport-security:
              description: 'Strict transport security header'
              schema:
                $ref: '#/components/schemas/strictTransportSecurityHeader'
            x-frame-options:
              description: 'Frame options header'
              schema:
                $ref: '#/components/schemas/xFrameOptionsHeader'
            x-content-type-options:
              description: 'Content type options header'
              schema:
                $ref: '#/components/schemas/xContentTypeOptionsHeader'
            content-security-policy:
              description: 'Content security policy header'
              schema:
                $ref: '#/components/schemas/contentSecurityPolicyHeader'
            referrer-policy:
              description: 'Referrer policy header'
              schema:
                $ref: '#/components/schemas/referrerPolicyHeader'
            permissions-policy:
              description: 'Permissions policy header'
              schema:
                $ref: '#/components/schemas/permissionsPolicyHeader'
            location:
              description: Location header
              schema:
                $ref: '#/components/schemas/locationHeader'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/standardResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/GroupVgResponse'
              examples:
                GroupVgResponse:
                  value:
                    $ref: '#/components/examples/GroupVgResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '403':
          $ref: '#/components/responses/forbiddenResponse'
        '404':
          $ref: '#/components/responses/notFoundResponse'
        '406':
          $ref: '#/components/responses/notAcceptableResponse'
        '413':
          $ref: '#/components/responses/payloadTooLargeResponse'
        '415':
          $ref: '#/components/responses/unsupportedMediaTypeResponse'
        '429':
          $ref: '#/components/responses/tooManyRequestsResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
        '503':
          $ref: '#/components/responses/serviceUnavailableResponse'
        default:
          $ref: '#/components/responses/unexpectedErrorResponse'
  /folio/{numberFolio}/client:
    post:
      tags:
        - LifeGroup
      summary: Creación del contratante
      description: Crea el contratante
      operationId: createClient
      parameters:
        - name: numberFolio
          in: path
          required: true
          description: El número de folio asociado al contratante
          schema:
            type: string
            description: id del folio
            example: '1006379'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientRequest'
            examples:
              ClientRequest:
                $ref: '#/components/examples/ClientRequestData'
      responses:
        201:
          description: Contratante creado
          headers:
            strict-transport-security:
              description: 'Strict transport security header'
              schema:
                $ref: '#/components/schemas/strictTransportSecurityHeader'
            x-frame-options:
              description: 'Frame options header'
              schema:
                $ref: '#/components/schemas/xFrameOptionsHeader'
            x-content-type-options:
              description: 'Content type options header'
              schema:
                $ref: '#/components/schemas/xContentTypeOptionsHeader'
            content-security-policy:
              description: 'Content security policy header'
              schema:
                $ref: '#/components/schemas/contentSecurityPolicyHeader'
            referrer-policy:
              description: 'Referrer policy header'
              schema:
                $ref: '#/components/schemas/referrerPolicyHeader'
            permissions-policy:
              description: 'Permissions policy header'
              schema:
                $ref: '#/components/schemas/permissionsPolicyHeader'
            location:
              description: Location header
              schema:
                $ref: '#/components/schemas/locationHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateClientResponse'
              examples:
                clientCreated:
                  value:
                    status: "success"
                    code: 201
                    data:
                      message: "Cliente creado exitosamente"
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '403':
          $ref: '#/components/responses/forbiddenResponse'
        '404':
          $ref: '#/components/responses/notFoundResponse'
        '406':
          $ref: '#/components/responses/notAcceptableResponse'
        '413':
          $ref: '#/components/responses/payloadTooLargeResponse'
        '415':
          $ref: '#/components/responses/unsupportedMediaTypeResponse'
        '429':
          $ref: '#/components/responses/tooManyRequestsResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
        '503':
          $ref: '#/components/responses/serviceUnavailableResponse'
        default:
          $ref: '#/components/responses/unexpectedErrorResponse'
  /pricing/{numberFolio}:
    get:
      tags:
        - LifeGroup
      summary: Consultar costos de la cotización
      description: Se consultan costos de la cotización en la calculadora
      operationId: pricing
      parameters:
        - name: numberFolio
          in: path
          required: true
          description: El número de folio para consultar la cotización
          schema:
            type: string
            description: Id del folio
            example: '1006379'
      responses:
        '200':
          description: Respuesta generada al consultar precios
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseQuotationLifeGroupV2'
              examples:
                ResponseQuotationLifeGroupV2:
                  $ref: '#/components/examples/ResponseQuotationLifeGroupV2'
          headers:
            strict-transport-security:
              description: "Strict transport security header"
              schema:
                $ref: "#/components/schemas/strictTransportSecurityHeader"
            x-frame-options:
              description: "Frame options header"
              schema:
                $ref: "#/components/schemas/xFrameOptionsHeader"
            x-content-type-options:
              description: "Content type options header"
              schema:
                $ref: "#/components/schemas/xContentTypeOptionsHeader"
            content-security-policy:
              description: "Content security policy header"
              schema:
                $ref: "#/components/schemas/contentSecurityPolicyHeader"
            referrer-policy:
              description: "Referrer policy header"
              schema:
                $ref: "#/components/schemas/referrerPolicyHeader"
            permissions-policy:
              description: "Permissions policy header"
              schema:
                $ref: "#/components/schemas/permissionsPolicyHeader"
            location:
              description: Location header
              schema:
                $ref: "#/components/schemas/locationHeader"
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '403':
          $ref: '#/components/responses/forbiddenResponse'
        '404':
          $ref: '#/components/responses/notFoundResponse'
        '406':
          $ref: '#/components/responses/notAcceptableResponse'
        '413':
          $ref: '#/components/responses/payloadTooLargeResponse'
        '415':
          $ref: '#/components/responses/unsupportedMediaTypeResponse'
        '429':
          $ref: '#/components/responses/tooManyRequestsResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
        '503':
          $ref: '#/components/responses/serviceUnavailableResponse'
        default:
          $ref: '#/components/responses/unexpectedErrorResponse'
  /print-quote/{numberFolio}:
    get:
      tags:
        - LifeGroup
      summary: Generar pdf cotización
      description: Se genera base64 de la cotización en base al folio enviado
      operationId: printQuote
      parameters:
        - name: numberFolio
          in: path
          required: true
          description: El número de folio para generar la cotización
          schema:
            type: string
            description: Id del folio
            example: '1006379'
      responses:
        '200':
          description: Respuesta de generacion de pdf de cotización en base64
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FindDocumentResponse"
              examples:
                findDocumentResponse:
                  $ref: "#/components/examples/findDocumentResponse"
          headers:
            strict-transport-security:
              description: "Strict transport security header"
              schema:
                $ref: "#/components/schemas/strictTransportSecurityHeader"
            x-frame-options:
              description: "Frame options header"
              schema:
                $ref: "#/components/schemas/xFrameOptionsHeader"
            x-content-type-options:
              description: "Content type options header"
              schema:
                $ref: "#/components/schemas/xContentTypeOptionsHeader"
            content-security-policy:
              description: "Content security policy header"
              schema:
                $ref: "#/components/schemas/contentSecurityPolicyHeader"
            referrer-policy:
              description: "Referrer policy header"
              schema:
                $ref: "#/components/schemas/referrerPolicyHeader"
            permissions-policy:
              description: "Permissions policy header"
              schema:
                $ref: "#/components/schemas/permissionsPolicyHeader"
            location:
              description: Location header
              schema:
                $ref: "#/components/schemas/locationHeader"
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '403':
          $ref: '#/components/responses/forbiddenResponse'
        '404':
          $ref: '#/components/responses/notFoundResponse'
        '406':
          $ref: '#/components/responses/notAcceptableResponse'
        '413':
          $ref: '#/components/responses/payloadTooLargeResponse'
        '415':
          $ref: '#/components/responses/unsupportedMediaTypeResponse'
        '429':
          $ref: '#/components/responses/tooManyRequestsResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
        '503':
          $ref: '#/components/responses/serviceUnavailableResponse'
        default:
          $ref: '#/components/responses/unexpectedErrorResponse'
  /payment-link/get:
    post:
      tags:
        - LifeGroup
      summary: Se genera la liga de pago
      description: Se genera link de pago
      operationId: payment-link
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentLinkRequest'
            examples:
              PaymentLinkRequest:
                $ref: '#/components/examples/PaymentLinkRequest'
      responses:
        200:
          description: Se genera liga de pago
          headers:
            strict-transport-security:
              description: 'Strict transport security header'
              schema:
                $ref: '#/components/schemas/strictTransportSecurityHeader'
            x-frame-options:
              description: 'Frame options header'
              schema:
                $ref: '#/components/schemas/xFrameOptionsHeader'
            x-content-type-options:
              description: 'Content type options header'
              schema:
                $ref: '#/components/schemas/xContentTypeOptionsHeader'
            content-security-policy:
              description: 'Content security policy header'
              schema:
                $ref: '#/components/schemas/contentSecurityPolicyHeader'
            referrer-policy:
              description: 'Referrer policy header'
              schema:
                $ref: '#/components/schemas/referrerPolicyHeader'
            permissions-policy:
              description: 'Permissions policy header'
              schema:
                $ref: '#/components/schemas/permissionsPolicyHeader'
            location:
              description: Location header
              schema:
                $ref: '#/components/schemas/locationHeader'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/standardResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/PaymentLinkResponse'
              examples:
                PaymentLinkResponse:
                  value:
                    $ref: '#/components/examples/PaymentLinkResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '403':
          $ref: '#/components/responses/forbiddenResponse'
        '404':
          $ref: '#/components/responses/notFoundResponse'
        '406':
          $ref: '#/components/responses/notAcceptableResponse'
        '413':
          $ref: '#/components/responses/payloadTooLargeResponse'
        '415':
          $ref: '#/components/responses/unsupportedMediaTypeResponse'
        '429':
          $ref: '#/components/responses/tooManyRequestsResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
        '503':
          $ref: '#/components/responses/serviceUnavailableResponse'
        default:
          $ref: '#/components/responses/unexpectedErrorResponse'
  /validate-rfc:
    get:
      summary: "Válida RFC"
      description: "Válida el RFC de las personas por sus datos"
      operationId: validateRFC
      tags:
        - External
      parameters:
        - name: typeLegalId
          in: query
          required: true
          schema:
            type: integer
            format: int32
            description: Id del tipo de persona (1 - físico, 2- moral)
            example: 1
            enum:
              - 1
              - 2
        - name: rfc
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/rfc'
        - name: name
          in: query
          required: true
          schema:
            type: string
            description: Primer nombre de la persona física ó razón social de persona moral
            example: PEDRO
            pattern: '^[a-zA-Z0-9ñÑáéíóúÁÉÍÓÚ\s,.&/]+$'
        - name: surname
          in: query
          required: false
          schema:
            type: string
            description: Primer apellido de la persona física (requerido para le persona física)
            example: MARTINEZ
            pattern: '^[a-zA-ZñÑáéíóúÁÉÍÓÚ\s]+$'
        - name: secondSurname
          in: query
          required: false
          schema:
            type: string
            description: Segundo apellido de la persona física (requerido para le persona física)
            example: LEON
            pattern: '^[a-zA-ZñÑáéíóúÁÉÍÓÚ\s]+$'
        - name: birthdate
          in: query
          required: true
          schema:
            type: string
            format: date
            description: Fecha de nacimiento o constitución
            example: 2000-01-01
      responses:
        '200':
          description: respuesta validación RFC
          headers:
            strict-transport-security:
              description: 'Strict transport security header'
              schema:
                $ref: '#/components/schemas/strictTransportSecurityHeader'
            x-frame-options:
              description: 'Frame options header'
              schema:
                $ref: '#/components/schemas/xFrameOptionsHeader'
            x-content-type-options:
              description: 'Content type options header'
              schema:
                $ref: '#/components/schemas/xContentTypeOptionsHeader'
            content-security-policy:
              description: 'Content security policy header'
              schema:
                $ref: '#/components/schemas/contentSecurityPolicyHeader'
            referrer-policy:
              description: 'Referrer policy header'
              schema:
                $ref: '#/components/schemas/referrerPolicyHeader'
            permissions-policy:
              description: 'Permissions policy header'
              schema:
                $ref: '#/components/schemas/permissionsPolicyHeader'
            location:
              description: Location header
              schema:
                $ref: '#/components/schemas/locationHeader'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/standardResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/validateRFC'
              examples:
                Status:
                  $ref: '#/components/examples/validateRFCResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '403':
          $ref: '#/components/responses/forbiddenResponse'
        '404':
          $ref: '#/components/responses/notFoundResponse'
        '406':
          $ref: '#/components/responses/notAcceptableResponse'
        '415':
          $ref: '#/components/responses/unsupportedMediaTypeResponse'
        '429':
          $ref: '#/components/responses/tooManyRequestsResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
        '503':
          $ref: '#/components/responses/serviceUnavailableResponse'
        default:
          $ref: '#/components/responses/unexpectedErrorResponse'
  /people/{rfc}:
    get:
      summary: "Búsqueda por RFC"
      description: "Búsqueda de persona física o moral por RFC"
      operationId: searchByRFC
      tags:
        - External
      parameters:
        - name: rfc
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rfc'
      responses:
        '200':
          description: respuesta de búsqueda por RFC
          headers:
            strict-transport-security:
              description: 'Strict transport security header'
              schema:
                $ref: '#/components/schemas/strictTransportSecurityHeader'
            x-frame-options:
              description: 'Frame options header'
              schema:
                $ref: '#/components/schemas/xFrameOptionsHeader'
            x-content-type-options:
              description: 'Content type options header'
              schema:
                $ref: '#/components/schemas/xContentTypeOptionsHeader'
            content-security-policy:
              description: 'Content security policy header'
              schema:
                $ref: '#/components/schemas/contentSecurityPolicyHeader'
            referrer-policy:
              description: 'Referrer policy header'
              schema:
                $ref: '#/components/schemas/referrerPolicyHeader'
            permissions-policy:
              description: 'Permissions policy header'
              schema:
                $ref: '#/components/schemas/permissionsPolicyHeader'
            location:
              description: Location header
              schema:
                $ref: '#/components/schemas/locationHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeopleRfcResponse'
              examples:
                PeopleRfcResponse:
                  $ref: '#/components/examples/PeopleRfcResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '403':
          $ref: '#/components/responses/forbiddenResponse'
        '404':
          $ref: '#/components/responses/notFoundResponse'
        '406':
          $ref: '#/components/responses/notAcceptableResponse'
        '415':
          $ref: '#/components/responses/unsupportedMediaTypeResponse'
        '429':
          $ref: '#/components/responses/tooManyRequestsResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
        '503':
          $ref: '#/components/responses/serviceUnavailableResponse'
        default:
          $ref: '#/components/responses/unexpectedErrorResponse'
  /folio-status:
    post:
      tags:
        - LifeGroup
      summary: Cambio de estado del folio
      description: Cambio del estado de el folio
      operationId: changeStatusFolio
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FolioStatusRequest'
            examples:
              FolioStatusRequestExample:
                $ref: '#/components/examples/FolioStatusRequestExample'
      responses:
        200:
          description: Estado actualizado
          headers:
            strict-transport-security:
              description: 'Strict transport security header'
              schema:
                $ref: '#/components/schemas/strictTransportSecurityHeader'
            x-frame-options:
              description: 'Frame options header'
              schema:
                $ref: '#/components/schemas/xFrameOptionsHeader'
            x-content-type-options:
              description: 'Content type options header'
              schema:
                $ref: '#/components/schemas/xContentTypeOptionsHeader'
            content-security-policy:
              description: 'Content security policy header'
              schema:
                $ref: '#/components/schemas/contentSecurityPolicyHeader'
            referrer-policy:
              description: 'Referrer policy header'
              schema:
                $ref: '#/components/schemas/referrerPolicyHeader'
            permissions-policy:
              description: 'Permissions policy header'
              schema:
                $ref: '#/components/schemas/permissionsPolicyHeader'
            location:
              description: Location header
              schema:
                $ref: '#/components/schemas/locationHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateClientResponse'
              examples:
                FolioStatusRequestExample:
                  $ref: '#/components/examples/FolioStatusResponseExample'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '403':
          $ref: '#/components/responses/forbiddenResponse'
        '404':
          $ref: '#/components/responses/notFoundResponse'
        '406':
          $ref: '#/components/responses/notAcceptableResponse'
        '413':
          $ref: '#/components/responses/payloadTooLargeResponse'
        '415':
          $ref: '#/components/responses/unsupportedMediaTypeResponse'
        '429':
          $ref: '#/components/responses/tooManyRequestsResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
        '503':
          $ref: '#/components/responses/serviceUnavailableResponse'
        default:
          $ref: '#/components/responses/unexpectedErrorResponse'
  /issue-request:
    post:
      tags:
        - LifeGroup
      summary: Cotizar y emitir
      description: Cotizar y emitir en una sola petición
      operationId: quoteandissue
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueRequest'
            examples:
              FolioStatusRequestExample:
                $ref: '#/components/examples/IssueRequestExample'
      responses:
        202:
          description: Petición aceptada
          headers:
            strict-transport-security:
              description: 'Strict transport security header'
              schema:
                $ref: '#/components/schemas/strictTransportSecurityHeader'
            x-frame-options:
              description: 'Frame options header'
              schema:
                $ref: '#/components/schemas/xFrameOptionsHeader'
            x-content-type-options:
              description: 'Content type options header'
              schema:
                $ref: '#/components/schemas/xContentTypeOptionsHeader'
            content-security-policy:
              description: 'Content security policy header'
              schema:
                $ref: '#/components/schemas/contentSecurityPolicyHeader'
            referrer-policy:
              description: 'Referrer policy header'
              schema:
                $ref: '#/components/schemas/referrerPolicyHeader'
            permissions-policy:
              description: 'Permissions policy header'
              schema:
                $ref: '#/components/schemas/permissionsPolicyHeader'
            location:
              description: Location header
              schema:
                $ref: '#/components/schemas/locationHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateClientResponse'
              examples:
                IssueQuoteRequestExample:
                  $ref: '#/components/examples/FolioStatusResponseExample'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '403':
          $ref: '#/components/responses/forbiddenResponse'
        '404':
          $ref: '#/components/responses/notFoundResponse'
        '406':
          $ref: '#/components/responses/notAcceptableResponse'
        '413':
          $ref: '#/components/responses/payloadTooLargeResponse'
        '415':
          $ref: '#/components/responses/unsupportedMediaTypeResponse'
        '429':
          $ref: '#/components/responses/tooManyRequestsResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
        '503':
          $ref: '#/components/responses/serviceUnavailableResponse'
        default:
          $ref: '#/components/responses/unexpectedErrorResponse'
  /quotation-history/get:
    post:
      tags:
        - LifeGroup
      summary: Obtiene historico de tramites
      description: Obtiene historico de tramites consultado por portal agentes
      operationId: getHistoryFolios
      parameters:
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/initParam'
        - name: modality
          in: query
          description: Modalidad de la cotización (Forma de aseguramiento).
          required: true
          schema:
            $ref: '#/components/schemas/modality'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HistoryRequest'
            examples:
              HistoryRequestExample:
                $ref: '#/components/examples/HistoryRequestExample'
      responses:
        206:
          description: Obtener persistencia de Folio
          headers:
            strict-transport-security:
              description: 'Strict transport security header'
              schema:
                $ref: '#/components/schemas/strictTransportSecurityHeader'
            x-frame-options:
              description: 'Frame options header'
              schema:
                $ref: '#/components/schemas/xFrameOptionsHeader'
            x-content-type-options:
              description: 'Content type options header'
              schema:
                $ref: '#/components/schemas/xContentTypeOptionsHeader'
            content-security-policy:
              description: 'Content security policy header'
              schema:
                $ref: '#/components/schemas/contentSecurityPolicyHeader'
            referrer-policy:
              description: 'Referrer policy header'
              schema:
                $ref: '#/components/schemas/referrerPolicyHeader'
            permissions-policy:
              description: 'Permissions policy header'
              schema:
                $ref: '#/components/schemas/permissionsPolicyHeader'
            location:
              description: Location header
              schema:
                $ref: '#/components/schemas/locationHeader'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/standardPaginatedResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/HistoryResponse'
              examples:
                HistoryResponseExample:
                  $ref: '#/components/examples/HistoryResponseExample'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '403':
          $ref: '#/components/responses/forbiddenResponse'
        '404':
          $ref: '#/components/responses/notFoundResponse'
        '406':
          $ref: '#/components/responses/notAcceptableResponse'
        '413':
          $ref: '#/components/responses/payloadTooLargeResponse'
        '415':
          $ref: '#/components/responses/unsupportedMediaTypeResponse'
        '429':
          $ref: '#/components/responses/tooManyRequestsResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
        '503':
          $ref: '#/components/responses/serviceUnavailableResponse'
        default:
          $ref: '#/components/responses/unexpectedErrorResponse'
components:
  headers:
    strict-transport-security:
      description: 'Strict transport security header'
      schema:
        $ref: '#/components/schemas/strictTransportSecurityHeader'
    x-frame-options:
      description: 'Frame options header'
      schema:
        $ref: '#/components/schemas/xFrameOptionsHeader'
    x-content-type-options:
      description: 'Content type options header'
      schema:
        $ref: '#/components/schemas/xContentTypeOptionsHeader'
    content-security-policy:
      description: 'Content security policy header'
      schema:
        $ref: '#/components/schemas/contentSecurityPolicyHeader'
    referrer-policy:
      description: 'Referrer policy header'
      schema:
        $ref: '#/components/schemas/referrerPolicyHeader'
    permissions-policy:
      description: 'Permissions policy header'
      schema:
        $ref: '#/components/schemas/permissionsPolicyHeader'
    location:
      description: Location header
      schema:
        $ref: '#/components/schemas/locationHeader'
  securitySchemes:
    apiKeyHeader:
      type: apiKey
      name: x-api-key
      in: header
    oAuth2:
      description: OAuth 2.0 authentication.
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://suramexicob2capimarketdev.b2clogin.com/suramexicob2capimarketdev.onmicrosoft.com/b2c_1_signin_signup/oauth2/v2.0/authorize
          tokenUrl: https://suramexicob2capimarketdev.b2clogin.com/suramexicob2capimarketdev.onmicrosoft.com/b2c_1_signin_signup/oauth2/v2.0/token
          scopes:
            3cd55b30-f7e9-4c5d-87c5-aa87b6b9278b: Grant access to data
        clientCredentials:
          tokenUrl: https://login.microsoftonline.com/suramexicob2capimarketdev.onmicrosoft.com/oauth2/v2.0/token
          scopes:
            https://suramexicob2capimarketdev.onmicrosoft.com/3cd55b30-f7e9-4c5d-87c5-aa87b6b9278b/.default: Grant access to data
  parameters:
    initParam:
      in: query
      name: $init
      description: |
        Registro inicial a mostrar. 
        * Valor mínimo: 1
        * Valor máximo: Total
      example: 1
      schema:
        type: integer
        format: int32
        default: 1
        minimum: 1
    limitParam:
      in: query
      name: $limit
      description: |
        Mäximo número de registros por página.
        * Valor mínimo: 1
        * Valor máximo: 250
      example: 10
      schema:
        type: integer
        format: int32
        default: 25
        minimum: 1
        maximum: 250
  schemas:
    standardError:
      type: object
      properties:
        code:
          type: string
          minLength: 2
          maxLength: 20
          description: Código del error
          example: SERR100
        description:
          type: string
          minLength: 2
          maxLength: 250
          description: Descriptción del error
          example: Error
        field:
          type: string
          minLength: 2
          maxLength: 100
          description: campo asociado al error
          example: Username
        traceId:
          description: Identificador de la traza
          type: string
          format: uuid
          minLength: 36
          maxLength: 36
          pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
          example: e3613ba0-ca8f-11ec-9d64-0242ac120002
      required:
        - code
        - description
    standardResponse:
      type: object
      properties:
        data:
          anyOf:
            - type: object
              nullable: true
            - type: array
              nullable: true
              items:
                type: object
      required:
        - data
    standardErrorResponse:
      allOf:
        - $ref: '#/components/schemas/standardResponse'
        - type: object
          properties:
            errors:
              type: array
              items:
                $ref: '#/components/schemas/standardError'
      required:
        - errors
    standardPagingLink:
      type: object
      nullable: true
      properties:
        href:
          type: string
          minLength: 10
          maxLength: 2048
          description: URL encoded link
          example: '/resources?init=1&limit=25&total=false'
    standardPaging:
      type: object
      description: Objecto de información páginada
      properties:
        init:
          type: integer
          format: int32
          description: Registro inicial de la página
          example: 1
        limit:
          type: integer
          format: int32
          description: Número de registros por página
          example: 25
        total:
          type: integer
          format: int32
          description: Total number of records
          example: 35
        links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/standardPagingLink'
            first:
              $ref: '#/components/schemas/standardPagingLink'
            previous:
              $ref: '#/components/schemas/standardPagingLink'
            next:
              $ref: '#/components/schemas/standardPagingLink'
            last:
              $ref: '#/components/schemas/standardPagingLink'
          required:
            - previous
            - next
            - self
      required:
        - init
        - limit
        - links
    standardPaginatedResponse:
      allOf:
        - $ref: '#/components/schemas/standardResponse'
        - type: object
          properties:
            paging:
              $ref: '#/components/schemas/standardPaging'
      required:
        - paging
        - data
    uuid:
      type: string
      format: uuid
      minLength: 36
      maxLength: 36
      pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
      example: 62977d46-7a50-41c9-8d84-38272ac2a8df
    strictTransportSecurityHeader:
      type: string
      minLength: 10
      maxLength: 100
      example: 'max-age=<expire-time>; includeSubDomains'
    xFrameOptionsHeader:
      type: string
      minLength: 10
      maxLength: 100
      example: 'SAMEORIGIN'
    xContentTypeOptionsHeader:
      type: string
      minLength: 5
      maxLength: 100
      example: 'nosniff'
    contentSecurityPolicyHeader:
      type: string
      minLength: 10
      maxLength: 100
      example: 'default-src ''self'' *.trusted.com'
    referrerPolicyHeader:
      type: string
      minLength: 10
      maxLength: 100
      example: 'strict-origin'
    permissionsPolicyHeader:
      type: string
      minLength: 10
      maxLength: 100
      example: 'geolocation=("https://your-site.example" "https://a.example" "https://b.example")'
    locationHeader:
      type: string
      maxLength: 2048
      pattern: ^(?:(?:((http|https):\/\/)?[^\/]+))?(?:\/|^)((?:[^#\.\/:?\n\r]+\/?)+(?=\?|#|$|\.|\/))$
      example: '/resources/acd0df8b-651a-4e8b-aeb3-a448408d90fb'
    system:
      type: object
      properties:
        system:
          type: string
          description: Nombre del sistema
          example: database
        status:
          type: boolean
          description: Estado del sistema
          example: true
    request:
      type: object
      properties:
        request:
          type: string
          description: Endpoint url
          example: /resources
        status:
          type: boolean
          description: Estado de la solicitud
          example: true
    status:
      type: object
      properties:
        systems:
          type: array
          items:
            $ref: '#/components/schemas/system'
        requests:
          type: array
          items:
            $ref: '#/components/schemas/request'
    typeLegalId:
      type: integer
      format: int32
      description: Id del tipo de persona (1 - físico, 2- moral)
      example: 1
      enum:
        - 1
        - 2
    rfc:
      type: string
      description: RFC del cliente
      example: ABC1234567895
      pattern: '^([A-Z,Ñ,&]{3,4}([0-9]{2})(0[1-9]|1[0-2])(0[1-9]|1[0-9]|2[0-9]|3[0-1])[A-Z|\d]{3})$'
      minLength: 12
      maxLength: 13
    curp:
      type: string
      description: CURP del cliente
      example: PGJH010101HNGRLN04
      minLength: 18
      maxLength: 18
      pattern: '^[A-Z]{4}[0-9]{6}[HM][A-Z]{5}[A-Z0-9]{2}$'
    # Properties
    monthsSalary:
      type: string
      description: numero de meses
      example: '12'
    plan:
      type: string
      description: Codigo de plan
      example: Basic Plan
    currentStep:
      type: object
      description: Objeto que representa el paso actual del componente
      properties:
        index:
          type: string
          description: Índice del paso actual
          example: "3"
        subSteps:
          type: array
          items:
            type: string
          description: Subpasos dentro del paso actual
          example: [ "2", "5" ]
    components:
      type: array
      items:
        type: object
        properties:
          key:
            type: string
            description: clave
            example: "001"
          value:
            type: string
            description: valor
            example: "vida grupo"
        description: Objeto dinámico que representa el estado, con claves y valores de cualquier tipo
        example: {
          key: "001",
          value: "vida grupo"
        }
      description: Arreglo dinámico de componentes, donde cada componente puede tener cualquier estructura
      example: [ ]
    state:
      type: object
      properties:
        key:
          type: string
          description: clave
          example: "001"
        value:
          type: string
          description: valor
          example: "vida grupo"
      description: Objeto dinámico que representa el estado, con claves y valores de cualquier tipo
      example: {
        key: "001",
        value: "vida grupo"
      }
    product:
      type: string
      description: Nombre del producto
      example:
        vidaGroup
    numberFolio:
      type: string
      description: id del folio
      example: '1006454'
    modalityResponse:
      type: string
      description: modalidad de la compañia
      example: 'TRADICIONAL'
    modality:
      type: string
      description: modalidad de aseguramiento
      enum:
        - TRADICIONAL
        - VOLUNTARIA
      example: TRADICIONAL
    averageAgeInsured:
      type: integer
      description: Promedio de la edad de los asegurados
      format: int32
      example: 30
    numAdministrativeInsured:
      type: integer
      description: Cantidad de asegurados de tipo administrativo
      format: int32
      example: 100
    numOperationalInsured:
      type: integer
      description: Cantidad de asegurados de tipo operacional
      format: int32
      example: 20
    administrativeInsuredSum:
      type: number
      description: Suma asegurada de asegurados de tipo administrativo
      example: 100000.00
    operationalInsuredSum:
      type: number
      description: Suma asegurada de asegurados de tipo operacional
      example: 5000000.00
    insuredSum:
      type: number
      description: Suma asegurada de un grupo
      example: '15700000.00'
    salaryMonth:
      type: integer
      format: int32
      description: Representa el tipo de modalidad de salario en meses
      example: 12
      enum: [ 12, 24, 36 ]
    averageMonthlySalary:
      type: number
      format: double
      description: Si aplica, muestra el salario mensual promedio para la modalidad `MESES_SUELDO`; en caso contrario, no contiene valor (null)
      example: 45362.2
    name:
      type: string
      description: Nombre del grupo
      maxLength: 20
      pattern: '^[a-zA-Z0-9ñÑáéíóúÁÉÍÓÚ\s]+$'
    groupType:
      type: string
      description: Tipo del grupo
      example: 'Familiar'
    groupNumber:
      type: integer
      format: int32
      description: Número identificador único para el grupo, Clave única de grupo.
      minimum: 1
      maximum: 10
      example: 2
    maxGroups:
      type: integer
      format: int32
      description: Cantidad máxima de grupos
      example: 10
    message:
      type: string
      description: Mensaje respectivo de respuesta
      minLength: 3
      maxLength: 50
      example: "success"
    # Objects
    Age:
      type: object
      description: coverages
      properties:
        min:
          type: integer
          format: int32
          description: modalityKey de las coberturas
          example: "vida grupo"
        max:
          type: integer
          format: int32
          description: modalityKey de las coberturas
          example: "vida grupo"
        averageMin:
          type: integer
          format: int32
          description: modalityKey de las coberturas
          example: "vida grupo"
        averageMax:
          type: integer
          format: int32
          description: modalityKey de las coberturas
          example: "vida grupo"
    zipCode:
      type: string
      description: Código postal del cliente
      example: "00001"
      minLength: 5
      maxLength: 5
      pattern: '^[0-9]{5}$'
    LimitBasic:
      type: object
      description: coverages
      properties:
        min:
          type: integer
          format: int32
          description: Limite minimo de las cobertuas
          example: "vida grupo"
        max:
          type: integer
          format: int32
          description: Limite maximo de las coberturas
          example: "vida grupo"
    Insured:
      type: object
      description: coverages
      properties:
        min:
          type: integer
          format: int32
          description: minimo de las coberturas
          example: 24
        max:
          type: integer
          format: int32
          description: maximo de las coberturas
          example: 24
        diffAdminOp:
          $ref: '#/components/schemas/DiffAdminOp'
    DiffAdminOp:
      type: object
      description: coverages
      properties:
        percentage:
          type: integer
          format: int32
          description: minimo de las coberturas
          example: 24
        comparator:
          type: string
          description: comparador de las coberturas
          example: desigualdad
    standardResponseMessage:
      type: object
      description: Respuesta generica para devolver un mensaje
      properties:
        message:
          $ref: '#/components/schemas/message'
      required:
        - message
    GroupedCoverage:
      type: object
      properties:
        code:
          type: string
          description: Código de la cobertura
          example: '00001'
        coverages:
          type: array
          items:
            $ref: '#/components/schemas/CoverageDetail'
    CreateClientResponse:
      allOf:
        - $ref: '#/components/schemas/standardResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/standardResponseMessage'
    FolioStatusRequest:
      type: object
      required:
        - numSequence
        - payment
      properties:
        numSequence:
          type: string
          description: Folio
          example: '10049118'
        payment:
          $ref: '#/components/schemas/Payment'
    Payment:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          description: Este es el nuevo status basado en mercadoPago
          example: 'pending'
    QuotationsSuccessfully:
      allOf:
        - $ref: '#/components/schemas/standardResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/standardResponseMessage'
    Folio:
      type: object
      description: Folio generado
      required:
        - numberFolio
        - key
        - product
        - ally
      properties:
        numberFolio:
          type: integer
          description: id del folio obtenido
          format: int32
          example: 30
        key:
          type: string
          description: llave del folio
          example: "key"
        product:
          $ref: '#/components/schemas/product'
        ally:
          type: string
          description: alias del folio
          example: "ally"
    FolioData:
      type: object
      description: Folio obtenido
      required:
        - numberFolio
        - createdAt
        - updatedAt
        - plan
        - agentData
        - quotationDetails
        - modalityValidation
        - modality
        - company
      properties:
        client:
          $ref: '#/components/schemas/ClientRequest'
        numberFolio:
          type: integer
          description: Id del folio obtenido
          format: int32
          example: 30
        createdAt:
          type: string
          format: date-time
          description: Fecha y hora de creación
          example: "2024-11-09T11:50:58"
        updatedAt:
          type: string
          format: date-time
          description: Fecha y hora de la última actualización
          example: "2024-11-09T15:07:46"
        plan:
          $ref: '#/components/schemas/Plan'
        costs:
          $ref: '#/components/schemas/Costs'
        agentData:
          $ref: '#/components/schemas/AgentData'
        quotationDetails:
          $ref: '#/components/schemas/QuotationDetails'
        modalityValidation:
          $ref: '#/components/schemas/ModalityValidation'
        modality:
          type: string
          description: Tipo de modalidad
          example: "TRADICIONAL"
        company:
          $ref: '#/components/schemas/Company'
        status:
          type: string
          description: Estado del folio
          example: "Abierto"
        policyData:
          $ref: '#/components/schemas/PolicyData'
    PolicyData:
      type: object
      description: Datos de la póliza
      properties:
        policyStatus:
          type: string
          description: Estado de la póliza
          example: "PENDING"
        paymentLink:
          type: boolean
          description: Variable para identificar si se debe generar el link de pago
          example: true
        paymentMethodId:
          type: string
          description: Id. del método de pago
          example: "3"
        paymentLinkPhoneNumber:
          $ref: '#/components/schemas/phoneNumber'
        createdAt:
          type: string
          format: date-time
          description: Fecha y hora de creación
          example: "2024-11-09T11:50:58"
    GroupVgRequest:
      type: object
      description: Representa el grupo en la compañía
      properties:
        groupNumber:
          $ref: '#/components/schemas/groupNumber'
        name:
          $ref: '#/components/schemas/name'
        groupType:
          type: string
          description: Tipo del grupo
          enum:
            - SA_FIJA
            - MESES_SUELDO
          example: 'SA_FIJA'
        numAdministrativeInsured:
          $ref: '#/components/schemas/numAdministrativeInsured'
        numOperationalInsured:
          $ref: '#/components/schemas/numOperationalInsured'
        administrativeInsuredSum:
          $ref: '#/components/schemas/administrativeInsuredSum'
        operationalInsuredSum:
          $ref: '#/components/schemas/operationalInsuredSum'
        salaryMonth:
          $ref: '#/components/schemas/salaryMonth'
        averageMonthlySalary:
          $ref: '#/components/schemas/averageMonthlySalary'
        insuredSumCoverages:
          type: array
          items:
            $ref: '#/components/schemas/InsuredSumCoverages'
      required:
        - name
        - InsuredSumCoverages
    InsuredSumCoverages:
      type: object
      description: Lista de tipos de asegurados con sus coberturas.
      properties:
        code:
          type: string
          description: Código de la cobertura.
          example: "00001"
        coveragesInformation:
          type: array
          description: Lista de tipos de asegurados con sus sumas aseguradas para la cobertura específica.
          items:
            type: object
            properties:
              type:
                type: string
                description: Tipo de asegurado, como "ADMINISTRATIVO" o "OPERATIVO".
                enum:
                  - ADMINISTRATIVOS
                  - OPERATIVOS
                  - C
                  - T
                  - H
                  - D
                  - A
                example: "ADMINISTRATIVOS"
              insuredSum:
                type: number
                description: Suma asegurada específica para este tipo de asegurado.
                example: 750000.00
          required:
            - type
            - insuredSum
      required:
        - code
        - coveragesInformation
    phoneNumber:
      type: string
      description: Teléfono de contacto del cliente
      example: 5551234567
      minLength: 10
      maxLength: 10
      pattern: '^(?!0123456789|1234567890|9876543210|(\d)\1{9})\d{10}$'
    ClientRequest:
      type: object
      description: Solicitud para la creación de un cliente con toda su información personal, de dirección y de facturación.
      required:
        - general
        - address
        - invoicing
        - billingAddress
      properties:
        general:
          $ref: '#/components/schemas/GeneralInfo'
        address:
          $ref: '#/components/schemas/Address'
        invoicing:
          $ref: '#/components/schemas/GeneralInfo'
        billingAddress:
          $ref: '#/components/schemas/Address'
    GeneralInfo:
      type: object
      description: Información general del cliente.
      required:
        - typeLegalId
        - rfc
        - email
        - phoneNumber
      properties:
        typeLegalId:
          $ref: '#/components/schemas/typeLegalId'
        rfc:
          $ref: '#/components/schemas/rfc'
        businessName:
          type: string
          description: Razón social del cliente.
          example: "Empresa XYZ S.A. de C.V."
          maxLength: 70
          pattern: '^[a-zA-Z0-9\sáéíóúÁÉÍÓÚñÑ&.,-/]+$'
        constitutionDate:
          type: string
          format: date
          description: Fecha de constitución del cliente.
          example: "1990-05-15"
        legalRepresentativeName:
          type: string
          description: Nombre del apoderado legal.
          example: "Juan Pérez García"
          maxLength: 40
          pattern: '^[a-zA-ZñÑáéíóúÁÉÍÓÚ\s]+$'
        birthdate:
          type: string
          format: date
          description: Fecha de nacimiento del apoderado legal (formato dd/mm/aaaa).
          example: "1990-05-15"
        email:
          type: string
          description: Correo electrónico del cliente
          example: juan.perez@email.com
          maxLength: 50
          pattern: '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$'
        phoneNumber:
          $ref: '#/components/schemas/phoneNumber'
        name:
          type: string
          description: Primer nombre del cliente
          example: Juan
          maxLength: 20
          pattern: '^[a-zA-ZñÑáéíóúÁÉÍÓÚ\s]+$'
        secondName:
          type: string
          description: Segundo nombre del cliente
          example: Carlos
          maxLength: 20
          pattern: '^[a-zA-ZñÑáéíóúÁÉÍÓÚ\s]+$'
        surname:
          type: string
          description: Primer paterno del cliente
          example: Perez
          maxLength: 20
          pattern: '^[a-zA-ZñÑáéíóúÁÉÍÓÚ\s]+$'
        secondSurname:
          type: string
          description: Apellido materno del cliente
          example: Garcia
          maxLength: 20
          pattern: '^[a-zA-ZñÑáéíóúÁÉÍÓÚ\s]+$'
        curp:
          $ref: '#/components/schemas/curp'
        gender:
          type: string
          description: Género del cliente (M para Femenino, H para Masculino, E para Moral)
          example: M
          enum:
            - M
            - H
            - E
        taxReform:
          type: object
          description: Regimen Fiscal del facturante
          properties:
            key:
              type: string
              minLength: 1
              example: "key1"
            value:
              type: string
              minLength: 1
              example: "Value 1"
          required:
            - key
            - value
        receiverCode:
          $ref: '#/components/schemas/zipCode'
    Address:
      type: object
      description: Dirección del cliente.
      required:
        - streetName
        - streetNumberExt
        - zipCode
        - stateId
        - municipality
        - colonyId
      properties:
        streetName:
          type: string
          description: Calle del cliente
          example: Calle Ficticia 123
          maxLength: 50
          pattern: '^[a-zA-Z0-9ñÑáéíóúÁÉÍÓÚ\s.,/]+$'
        streetNumberExt:
          type: string
          description: Número exterior de la dirección
          example: "123AB"
          maxLength: 10
          pattern: '^[a-zA-Z0-9ñÑáéíóúÁÉÍÓÚ\s/]+$'
        internalDepartmentNumber:
          type: string
          description: Número interior de la dirección
          example: "A123B"
          maxLength: 20
          pattern: '^[A-Za-z0-9]+$'
        zipCode:
          $ref: '#/components/schemas/zipCode'
        stateId:
          type: string
          description: Estado o provincia del cliente.
          example: "Nuevo León"
        municipality:
          type: string
          description: Municipio del cliente.
          example: "Guadalajara"
        colonyId:
          type: string
          description: Colonia o vecindario del cliente.
          example: "Centro"
        ordinalDomicile:
          type: integer
          format: int32
          description: Número ordinal domicilio
          example: 6
    FolioRecord:
      type: object
      description: Registro del numero de folio
      required:
        - numberFolio
      properties:
        numberFolio:
          $ref: '#/components/schemas/numberFolio'
    FolioRequest:
      type: object
      description: Solicitud para la creación del folio con la info del agente
      required:
        - userId
        - pointOfSaleId
        - groupId
        - subgroupId
        - rateProfileId
        - name
        - email
        - officeId
        - agentId
        - agentName
      properties:
        userId:
          $ref: '#/components/schemas/agentUserId'
        pointOfSaleId:
          $ref: '#/components/schemas/agentPointOfSaleId'
        groupId:
          $ref: '#/components/schemas/agentGroupId'
        subgroupId:
          $ref: '#/components/schemas/agentSubgroupId'
        rateProfileId:
          $ref: '#/components/schemas/agentRateProfileId'
        name:
          $ref: '#/components/schemas/agentName'
        email:
          $ref: '#/components/schemas/agentEmail'
        officeId:
          $ref: '#/components/schemas/agentOfficeId'
        officeDescription:
          $ref: '#/components/schemas/agentOfficeDescription'
        agentId:
          $ref: '#/components/schemas/agentId'
        agentName:
          $ref: '#/components/schemas/agentName'
        promoterName:
          $ref: '#/components/schemas/promoterName'
        promoterId:
          $ref: '#/components/schemas/promoterId'
    CompanyRequest:
      type: object
      description: Solicitud para la creación de la compañía
      properties:
        plan:
          $ref: '#/components/schemas/Plan'
        modality:
          $ref: '#/components/schemas/modality'
        company:
          $ref: '#/components/schemas/Company'
      required:
        - modality
        - company
    SalaryRequest:
      type: object
      properties:
        salaries:
          type: array
          items:
            type: object
            properties:
              insured:
                type: string
                description: "Nombre del asegurado"
                example: "Asegurado 1"
              salary:
                type: number
                format: double
                description: "Salario del asegurado"
                example: 4545.0
              activity:
                type: string
                description: "Actividad del asegurado (ADMINISTRATIVOS o OPERATIVOS)"
                example: "ADMINISTRATIVOS"
      required:
        - salaries
    Plan:
      type: object
      description: Plan elegido para la compañia
      properties:
        key:
          type: string
          description: Key del plan
          example: ESTANDAR
        name:
          type: string
          description: nombre del plan
          example: Estándar
        coverages:
          type: array
          description: Lista de coberturas
          items:
            type: string
          example: [ '00014' ]
    agentUserId:
      type: string
      description: ID del usuario
      example: "OPS$LALOZANO"
    agentPointOfSaleId:
      type: string
      description: ID del punto de venta
      example: "100001"
    agentGroupId:
      type: string
      description: Identificador del grupo de la parametría del agente
      example: "00019"
      minLength: 5
      maxLength: 5
    agentSubgroupId:
      type: string
      description: Identificador del subgrupo de la parametría del agente
      example: "0001900001"
      minLength: 10
      maxLength: 10
    agentRateProfileId:
      type: string
      description: ID del perfil de tarifa
      example: "9020000001"
    agentName:
      type: string
      description: Nombre del usuario
      example: "Luis Antonio"
    agentEmail:
      type: string
      format: email
      description: Correo electrónico del usuario
      example: "Luis.Lozano@segurossura.com.mx"
    agentOfficeId:
      type: string
      description: ID de la oficina
      example: "1"
    agentOfficeDescription:
      type: string
      description: Descripción de la oficina
      example: "OFICINA MEXICO, D.F."
    agentId:
      type: string
      description: ID del agente
      example: "000001"
    promoterId:
      type: string
      description: ID del promotor
      example: "967"
    promoterName:
      type: string
      description: Nombre del promotor
      example: "Alejandro Perea Mejia (METROPOLITANA)"
    Costs:
      type: object
      description: Costos de la cotización
      properties:
        totalNetPremium:
          type: string
          description: Prima neta
          example: '13270.9081'
        totalPremium:
          type: string
          description: Prima neta total
          example: '13570.9081'
        rights:
          type: string
          description: Derecho de póliza
          example: '130.9081'
        surcharges:
          type: string
          description: Recargo fraccionado
          example: '13.90'
        vat:
          type: string
          description: Iva
          example: '1.5'
    AgentData:
      type: object
      description: Datos del agente
      properties:
        userId:
          $ref: '#/components/schemas/agentUserId'
        pointOfSaleId:
          $ref: '#/components/schemas/agentPointOfSaleId'
        groupId:
          $ref: '#/components/schemas/agentGroupId'
        subgroupId:
          $ref: '#/components/schemas/agentSubgroupId'
        rateProfileId:
          $ref: '#/components/schemas/agentRateProfileId'
        name:
          $ref: '#/components/schemas/agentName'
        email:
          $ref: '#/components/schemas/agentEmail'
        officeId:
          $ref: '#/components/schemas/agentOfficeId'
        officeDescription:
          $ref: '#/components/schemas/agentOfficeDescription'
        agentId:
          $ref: '#/components/schemas/agentId'
        agentName:
          $ref: '#/components/schemas/agentName'
        promoterName:
          $ref: '#/components/schemas/promoterName'
        promoterId:
          $ref: '#/components/schemas/promoterId'
    QuotationDetails:
      type: object
      description: Detalles de la cotización
      properties:
        agentInitCommissionPercentage:
          type: number
          format: double
          description: Porcentaje de comisión inicial del agente
          example: 5.0
        promoterInitCommissionPercentage:
          type: number
          format: double
          description: Porcentaje de comisión inicial del promotor
          example: 4.5
        agentCommissionPercentage:
          $ref: '#/components/schemas/agentCommission'
        promoterCommissionPercentage:
          type: number
          format: double
          description: Porcentaje de comisión del promotor
          example: 3.0
        effectiveDate:
          $ref: '#/components/schemas/effectiveDate'
        businessDivision:
          type: string
          description: División de negocio asociada
          example: "CORPORATE"
        administrationType:
          $ref: '#/components/schemas/administrationType'
    Company:
      type: object
      description: Objecto con la info de compañía
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 60
          pattern: '^[a-zA-Z0-9ñÑáéíóúÁÉÍÓÚ\s]+$'
          example: Acme Corporation
        businessActivity:
          $ref: '#/components/schemas/CatalogItem'
        averageAgeInsured:
          $ref: '#/components/schemas/averageAgeInsured'
        numAdministrativeInsured:
          $ref: '#/components/schemas/numAdministrativeInsured'
        numOperationalInsured:
          $ref: '#/components/schemas/numOperationalInsured'
        administrativeInsuredSum:
          $ref: '#/components/schemas/administrativeInsuredSum'
        operationalInsuredSum:
          $ref: '#/components/schemas/operationalInsuredSum'
      required:
        - name
        - businessActivity
    PaymentLinkRequest:
      type: object
      description: Número del folio para generar liga de pago
      required:
        - numberFolio
      properties:
        numberFolio:
          $ref: '#/components/schemas/numberFolio'
        paymentLinkPhoneNumber:
          $ref: '#/components/schemas/phoneNumber'
    CatalogItem:
      type: object
      description: Objecto de la estrcutura para los catalogos
      properties:
        key:
          type: string
          minLength: 1
          example: "key1"
        value:
          type: string
          minLength: 1
          example: "Value 1"
      required:
        - key
        - value
    ListCatalog:
      type: array
      description: Listado de objectos de catalogos
      items:
        $ref: '#/components/schemas/CatalogItem'
    ListGroups:
      type: array
      items:
        $ref: '#/components/schemas/GroupVg'
    CompanyResponse:
      type: object
      description: Estructura de respuesta de compañía
      properties:
        plan:
          $ref: '#/components/schemas/Plan'
        modality:
          $ref: '#/components/schemas/modalityResponse'
        company:
          $ref: '#/components/schemas/Company'
    ModalityValidation:
      type: object
      description: validaciones de la modalidad
      properties:
        insured:
          $ref: '#/components/schemas/Insured'
        age:
          $ref: '#/components/schemas/Age'
        limitBasic:
          $ref: '#/components/schemas/LimitBasic'
        maxGroups:
          $ref: '#/components/schemas/maxGroups'
    GroupVg:
      type: object
      description: Representa el grupo en la compañía
      properties:
        groupNumber:
          $ref: '#/components/schemas/groupNumber'
        name:
          type: string
          description: Nombre del grupo
          example: 'grupo A'
        groupType:
          type: string
          description: Tipo del grupo
          example: 'Familiar'
        numAdministrativeInsured:
          $ref: '#/components/schemas/numAdministrativeInsured'
        numOperationalInsured:
          $ref: '#/components/schemas/numOperationalInsured'
        administrativeInsuredSum:
          $ref: '#/components/schemas/administrativeInsuredSum'
        operationalInsuredSum:
          $ref: '#/components/schemas/operationalInsuredSum'
        insuredSum:
          $ref: '#/components/schemas/insuredSum'
        salaryMonth:
          $ref: '#/components/schemas/salaryMonth'
        averageMonthlySalary:
          $ref: '#/components/schemas/averageMonthlySalary'
        coverages:
          type: array
          items:
            $ref: '#/components/schemas/CoverageDetail'
      required:
        - name
        - groupType
        - numAdministrativeInsured
        - numOperationalInsured
        - administrativeInsuredSum
        - operationalInsuredSum
        - monthsSalary
        - coverages
    CoverageDetail:
      type: object
      description: Representa una cobertura en el grupo
      properties:
        coverageKey:
          type: string
          description: Clave de la cobertura
          example: "FALLECIMIENTO"
        code:
          type: string
          description: Código de la cobertura
          example: "00001"
        description:
          type: string
          description: Descripción de la cobertura
          example: "Fallecimiento."
        typeCoverage:
          type: string
          description: Tipo de cobertura
          example: "BÁSICA"
        mandatory:
          type: boolean
          description: Indica si la cobertura es obligatoria
          example: true
        defaultValue:
          $ref: '#/components/schemas/DefaultValue'
        insuredValidations:
          type: array
          items:
            $ref: '#/components/schemas/InsuredValidation'
        display:
          type: object
          properties:
            type:
              type: string
              description: Tipo de campo para indicar al front como mostrar la cobertura
              example: LABEL
            color:
              type: string
              description: Tipo de campo para indicar al front que color mostrar
              example: gray
        grouped:
          type: object
          description: Objeto que define que visualmente se agrupan las coberturas
          properties:
            title:
              type: string
              description: Titulo a mostrar en agrupamiento
              example: Familiares
            text:
              type: string
              description: Texto a mostrar en agrupamiento
              example: Hijos
            siblingCoverages:
              type: array
              description: Coberturas con las cuales se agrupa visualmente
              items:
                type: string
                description: Códigos de coberturas a agrupar
                example: 9842
        insuredSumFix:
          type: boolean
          description: Bandera para identificar si la cobertura se maneja de tipo suma asegurada fija
          example: true
        insuredSumCoverages:
          type: array
          description: Lista de tipos de asegurados con sus sumas aseguradas para la cobertura específica.
          items:
            type: object
            properties:
              type:
                type: string
                description: Clave de la cobertura
                example: "FALLECIMIENTO"
              insuredSum:
                type: number
                description: Suma asegurada específica para este tipo de asegurado.
                example: 120000.00
    DefaultValue:
      type: object
      properties:
        defaultDisplayValue:
          type: number
          description: Valor por defecto de la suma asegurada
          example: 50.000
        dependencies:
          $ref: '#/components/schemas/Dependencies'
        formulaDescription:
          type: string
          description: Descripción de la fórmula
          example: "Formula de cálculo"
        formula:
          type: string
          description: Descripción de la fórmula
          example: "Formula de cálculo"
    SalariesDetail:
      type: object
      description: Arreglo de salarios para asegurados
      properties:
        insured:
          type: string
          description: Asegurado
          example: "Asegurado 1"
        salary:
          type: number
          format: double
          description: Salario del asegurado
          example: 50.000
        activity:
          type: string
          description: Tipo de asegurado, como "ADMINISTRATIVO" o "OPERATIVO".
          enum:
            - ADMINISTRATIVOS
            - OPERATIVOS
          example: "ADMINISTRATIVOS"
    InsuredValidation:
      type: object
      description: Validaciones de la cobertura
      properties:
        kinshipKey:
          type: string
          description: Clave de parentesco
          example: "PADRE"
        kinship:
          type: string
          description: Descripción del parentesco
          example: "Padre"
        acceptableYearOldLimit:
          $ref: '#/components/schemas/AgeLimit'
        insuredSumLimit:
          type: array
          items:
            $ref: '#/components/schemas/InsuredSumLimit'
    InsuredSumLimit:
      type: object
      properties:
        min:
          $ref: '#/components/schemas/Sum'
        max:
          $ref: '#/components/schemas/Sum'
    Sum:
      type: object
      description: Representa los valores de suma asegurada
      required:
        - defaultValue
        - formula
        - formulaDescription
      properties:
        defaultValue:
          type: number
          description: Valor por defecto de la suma asegurada
          example: 50.000
        dependencies:
          $ref: '#/components/schemas/Dependencies'
        formulaDescription:
          type: string
          description: Descripción de la fórmula
          example: "Formula de cálculo"
        formula:
          type: string
          description: Fórmula para calcular la suma asegurada
          example: "A + B * C"
    Dependencies:
      type: object
      description: Dependencias de cobertura
      properties:
        coverageKey:
          type: string
          description: Clave de cobertura
          example: '0000'
        kinshipKey:
          type: string
          description: Clave de parentesco
          example: 'T'
    AgeLimit:
      type: object
      description: Límite de edad
      properties:
        min:
          $ref: '#/components/schemas/YearLimit'
        max:
          $ref: '#/components/schemas/YearLimit'
    YearLimit:
      type: object
      description: Límite de edad en términos de años
      properties:
        unit:
          type: string
          description: Unidad de medida del límite de edad
          example: "dias"
        value:
          type: integer
          format: int32
          description: Valor del límite de edad
          example: 34
    recoverToken:
      type: string
      description: Token para recuperación del tramite
      example: 'eyy'
    RecoverComponent:
      type: object
      description: Solicitud de recuperación de tramite
      required:
        - token
      properties:
        token:
          $ref: '#/components/schemas/recoverToken'
    Component:
      type: object
      description: Estructura de objecto de persistencia de componentes
      required:
        - numberFolio
        - state
        - components
        - currentStep
      additionalProperties: false
      properties:
        numberFolio:
          $ref: '#/components/schemas/numberFolio'
        state:
          $ref: '#/components/schemas/state'
        components:
          $ref: '#/components/schemas/components'
        currentStep:
          $ref: '#/components/schemas/currentStep'
    CoveragePlanItem:
      type: object
      description: Coberturas de los planes
      properties:
        code:
          type: string
          example: 'ASISTENCIA_BASICA'
        description:
          type: string
          example: 'Asistencia Básica'
        coverages:
          type: array
          items:
            $ref: '#/components/schemas/CoverageDetail'
    ListCoverageDetail:
      type: array
      description: Listado de coberturas por modalidad
      items:
        $ref: '#/components/schemas/CoverageDetail'
    ListPlan:
      type: array
      description: Listado de planes de coberturas
      items:
        $ref: '#/components/schemas/PlanDto'
    PlanDto:
      type: object
      description: Planes de coberturas
      properties:
        planKey:
          type: string
          example: 'ESTANDAR'
        planDescription:
          type: string
          example: 'Estandar'
        coverages:
          type: array
          items:
            $ref: '#/components/schemas/CoveragePlanItem'
        suggestion:
          type: boolean
          example: true
        vignette:
          type: string
          example: 'Recomendado'
    GroupVgResponse:
      type: object
      description: Planes de coberturas
      properties:
        groupNumber:
          $ref: '#/components/schemas/groupNumber'
        name:
          $ref: '#/components/schemas/name'
        groupType:
          $ref: '#/components/schemas/groupType'
        numAdministrativeInsured:
          $ref: '#/components/schemas/numAdministrativeInsured'
        numOperationalInsured:
          $ref: '#/components/schemas/numOperationalInsured'
        administrativeInsuredSum:
          $ref: '#/components/schemas/administrativeInsuredSum'
        operationalInsuredSum:
          $ref: '#/components/schemas/operationalInsuredSum'
        salaryMonth:
          $ref: '#/components/schemas/salaryMonth'
        averageMonthlySalary:
          $ref: '#/components/schemas/averageMonthlySalary'
        salaries:
          type: array
          items:
            $ref: '#/components/schemas/SalariesDetail'
        coverages:
          type: array
          items:
            $ref: '#/components/schemas/CoverageDetail'
    effectiveDate:
      type: string
      format: date
      description: Fecha inicio de vigencia
      example: "2024-11-06"
    agentCommission:
      type: number
      format: double
      description: Comision del agente
      minimum: 0.0
      maximum: 1.0
      example: 0.2
    administrationType:
      type: string
      description: Forma de administracion de la poliza
      enum:
        - AUTOADMINISTRADA
        - DETALLADA
      example: DETALLADA
    UpdateQuotationDetailsRequest:
      type: object
      description: Solicitud para la actualización de los datos de cotización permitidos
      properties:
        effectiveDate:
          $ref: '#/components/schemas/effectiveDate'
        agentCommission:
          $ref: '#/components/schemas/agentCommission'
        administrationType:
          $ref: '#/components/schemas/administrationType'
    ResponseQuotationLifeGroupV2:
      type: object
      properties:
        data:
          title: ResponseLifeGroup
          description: "Respuesta de la Cotización del Producto Vida Grupo"
          type: object
          properties:
            plans:
              type: array
              description: "Listado de planes cotizados"
              items:
                $ref: '#/components/schemas/PlanResponseSchema'
            volunteer:
              $ref: '#/components/schemas/VolunteerResponseSchema'
    PaymentLinkResponse:
      type: object
      description: Generación de liga de pago
      properties:
        urlRedirect:
          type: string
          description: URL del link de pago
          example: "https://pagos-dev.segurossura.com.mx/short/9WOzIxRmJv"
        validity:
          type: string
          format: date
          description: Fecha de generación del link de pago (YYYY-MM-DD)
          example: "2025-01-16"
        success:
          type: boolean
          description: Estado de la liga de pago
          example: true
    PlanResponseSchema:
      title: PlanResponseSchema
      description: "Cotización por plan del producto Vida Grupo"
      type: object
      properties:
        namePlan:
          minLength: 1
          type: string
          description: "Nombre del Plan"
          example: "BASICA"
        totalNetPremium:
          type: string
          description: "Prima Neta Total"
          example: '12483.837'
        totalPremium:
          type: string
          description: "Prima Total"
          example: '12783.8374'
        periodic:
          description: "Periodicidad del pago"
          type: object
          properties:
            netAnnualPremium:
              type: string
              description: "Prima anual neta"
              example: '12783.8374'
            netSemiannualPremium:
              type: string
              description: "Prima neta semestral"
              example: '12783.8374'
            netQuarterlyPremium:
              type: string
              description: "Prima trimestral neta"
              example: '12783.8374'
            netMonthlyPremium:
              type: string
              description: "Prima mensual neta"
              example: '12783.8374'
            annualPaymentSurcharge:
              type: string
              description: "Recargo por pago anual"
              example: '12783.8374'
            semiannualPaymentSurcharge:
              type: string
              description: "Recargo por pago semestral"
              example: '12783.8374'
            quarterlyPaymentSurcharge:
              type: string
              description: "Recargo por pago trimestral"
              example: '12783.8374'
            monthlyPaymentSurcharge:
              type: string
              description: "Recargo por pago mensual"
              example: '12783.8374'
            annualShippingFees:
              type: string
              description: "Tarifas de envío anuales"
              example: '12783.8374'
            semiannualShippingFees:
              type: string
              description: "Gastos de envío semestrales"
              example: '12783.8374'
            quarterlyShippingFees:
              type: string
              description: "Tarifas de envío trimestrales"
              example: '12783.8374'
            monthlyShippingFees:
              type: string
              description: "Tarifas de envío mensuales"
              example: '12783.8374'
            totalAnnualPeriod:
              type: string
              description: "Periodo anual total"
              example: '12783.8374'
            totalSemiannualPeriod:
              type: string
              description: "Periodo Semestral Total"
              example: '12783.8374'
            totalQuarterlyPeriod:
              type: string
              description: "Periodo trimestral total"
              example: '12783.8374'
            totalMonthlyPeriod:
              type: string
              description: "Periodo mensual total"
              example: '12783.8374'
            firstAnnualReceipt:
              type: string
              description: "Primer recibo anual"
              example: '12783.8374'
            firstSemiannualReceipt:
              type: string
              description: "Primer recibo semestral"
              example: '12783.8374'
            firstQuarterlyReceipt:
              type: string
              description: "Primer recibo trimestral"
              example: '12783.8374'
            firstMonthlyReceipt:
              type: string
              description: "Primer recibo mensual"
              example: '12783.8374'
            subsequentAnnualReceipt:
              type: string
              description: "Recibo subsecuente anual"
              example: '12783.8374'
            subsequentSemiannualReceipt:
              type: string
              description: "Recibo subsecuente semestral"
              example: '12783.8374'
            subsequentQuarterlyReceipt:
              type: string
              description: "Recibo subsecuente trimestral"
              example: '12783.8374'
            subsequentMonthlyReceipt:
              type: string
              description: "Recibo subsecuente mensual"
              example: '12783.8374'
        financialData:
          description: "Otros datos de la prima"
          type: object
          properties:
            rightPolicy:
              type: string
              description: "Derechos de póliza"
              example: '127.81'
            fractionalSurcharge:
              type: string
              description: "Recargo fraccionado"
              example: '183.83'
            vat:
              type: string
              description: "IVA"
              example: '1.8'
        policyHoldersGroups:
          type: array
          description: "Listado de Cotización por Grupo"
          items:
            $ref: '#/components/schemas/InsuredDataSchema'
    VolunteerResponseSchema:
      title: VolunteerResponseSchema
      type: object
      description: "Respuesta de calculadora para modalidad voluntaria"
      properties:
        totalNetPremium:
          type: string
          description: "Prima Neta Total"
          example: '12483.837'
        totalPremium:
          type: string
          description: "Prima Total"
          example: '12783.8374'
        insuredVolunteering:
          type: array
          description: "Listado de Cotización por Grupo"
          items:
            $ref: '#/components/schemas/InsuredVolunteerDataSchema'
        responsePeriodic:
          description: "Periodicidad del pago"
          type: object
          properties:
            netAnnualPremium:
              type: string
              description: "Prima anual neta"
              example: '12783.8374'
            netSemiannualPremium:
              type: string
              description: "Prima neta semestral"
              example: '12783.8374'
            netQuarterlyPremium:
              type: string
              description: "Prima trimestral neta"
              example: '12783.8374'
            netMonthlyPremium:
              type: string
              description: "Prima mensual neta"
              example: '12783.8374'
            annualPaymentSurcharge:
              type: string
              description: "Recargo por pago anual"
              example: '12783.8374'
            semiannualPaymentSurcharge:
              type: string
              description: "Recargo por pago semestral"
              example: '12783.8374'
            quarterlyPaymentSurcharge:
              type: string
              description: "Recargo por pago trimestral"
              example: '12783.8374'
            monthlyPaymentSurcharge:
              type: string
              description: "Recargo por pago mensual"
              example: '12783.8374'
            annualShippingFees:
              type: string
              description: "Tarifas de envío anuales"
              example: '12783.8374'
            semiannualShippingFees:
              type: string
              description: "Gastos de envío semestrales"
              example: '12783.8374'
            quarterlyShippingFees:
              type: string
              description: "Tarifas de envío trimestrales"
              example: '12783.8374'
            monthlyShippingFees:
              type: string
              description: "Tarifas de envío mensuales"
              example: '12783.8374'
            totalAnnualPeriod:
              type: string
              description: "Periodo anual total"
              example: '12783.8374'
            totalSemiannualPeriod:
              type: string
              description: "Periodo Semestral Total"
              example: '12783.8374'
            totalQuarterlyPeriod:
              type: string
              description: "Periodo trimestral total"
              example: '12783.8374'
            totalMonthlyPeriod:
              type: string
              description: "Periodo mensual total"
              example: '12783.8374'
            firstAnnualReceipt:
              type: string
              description: "Primer recibo anual"
              example: '12783.8374'
            firstSemiannualReceipt:
              type: string
              description: "Primer recibo semestral"
              example: '12783.8374'
            firstQuarterlyReceipt:
              type: string
              description: "Primer recibo trimestral"
              example: '12783.8374'
            firstMonthlyReceipt:
              type: string
              description: "Primer recibo mensual"
              example: '12783.8374'
            subsequentAnnualReceipt:
              type: string
              description: "Recibo subsecuente anual"
              example: '12783.8374'
            subsequentSemiannualReceipt:
              type: string
              description: "Recibo subsecuente semestral"
              example: '12783.8374'
            subsequentQuarterlyReceipt:
              type: string
              description: "Recibo subsecuente trimestral"
              example: '12783.8374'
            subsequentMonthlyReceipt:
              type: string
              description: "Recibo subsecuente mensual"
              example: '12783.8374'
        financialDataDocument:
          description: "Otros datos de la prima"
          type: object
          properties:
            rightPolicy:
              type: string
              description: "Derechos de póliza"
              example: '127.81'
            fractionalSurcharge:
              type: string
              description: "Recargo fraccionado"
              example: '183.83'
            vat:
              type: string
              description: "IVA"
              example: '1.8'
        paymentSurcharge:
          description: "Recargos por pago fraccionado"
          type: object
          properties:
            monthlySurcharge:
              type: string
              description: "Recargo por pago fraccionado mensual"
              example: '0.075'
            quarterlySurcharge:
              type: string
              description: "Recargo por pago fraccionado trimestral"
              example: '0.065'
            semiannualSurcharge:
              type: string
              description: "Recargo por pago fraccionado semestral"
              example: '0.042'
            annualSurcharge:
              type: string
              description: "Recargo por pago fraccionado anual"
              example: '0'
    InsuredDataSchema:
      type: object
      properties:
        coverages:
          type: array
          description: "Listado de Coberturas"
          items:
            $ref: '#/components/schemas/CoverageSchema'
        group:
          type: integer
          format: int32
          description: "Número del Grupo"
          example:
            group: 1
        rule:
          type: string
          enum:
            - "SA_FIJA"
            - "MESES_SUELDO_12"
            - "MESES_SUELDO_24"
            - "MESES_SUELDO_36"
          description: "Regla Salarial"
          example: "FIJA"
        insuredSum:
          type: string
          description: "Total de la Suma Asegurada"
          example: '1234567890.12345'
        policyHolders:
          type: integer
          format: int32
          description: "Número de Asegurados por Grupo"
          example: 11
        basicRiskPremium:
          type: string
          description: "Prima de Riesgo Básica"
          example: '3096.5000'
        optionalRiskPremium:
          type: string
          description: "Prima de Riesgo Opcional"
          example: '4581.0600'
        netPremium:
          type: string
          description: "Prima Neta"
          example: '12483.8374'
        administrativeSum:
          type: string
          description: "Suma de Prima Riesgo Opcionales Administrativos"
          example: '4581.0600'
        operativeSum:
          type: string
          description: "Suma de Prima Riesgo Opcionales Operativos"
          example: '0.0000'
        salaryTotalNetPremiumAdmin:
          type: string
          description: "Salario Total Administrativos"
          example: '10064.0681'
        salaryTotalNetPremiumOperative:
          type: string
          description: "Salario Total Operativos"
          example: '10064.0681'
        totalNetPremiumGroupAdmin:
          type: string
          description: "Prima Neta Total Administrativos"
          example: '10064.0681'
        totalNetPremiumGroupOperative:
          type: string
          description: "Prima Neta Total Operativos"
          example: '0.0000'
    InsuredVolunteerDataSchema:
      type: object
      properties:
        coverages:
          type: array
          description: "Listado de Coberturas"
          items:
            $ref: '#/components/schemas/CoverageSchema'
        numberGroup:
          type: integer
          format: int32
          description: "Número del Grupo"
          example:
            group: 1
        policyHolders:
          type: integer
          format: int32
          description: "Número de Asegurados por Grupo"
          example: 11
        families:
          type: array
          description: "Información sobre la familia"
          items:
            $ref: '#/components/schemas/FamiliesSchema'
        sumNetPremium:
          type: array
          description: "Listado de primas por parentesco"
          items:
            $ref: '#/components/schemas/SumNetPremiumSchema'
    CoverageSchema:
      type: object
      properties:
        coverageKey:
          type: string
          description: "Código de la Cobertura"
          example: "FALLECIMIENTO"
        sumOccupation:
          type: array
          description: "Lista de sumas aseguradas por ocupación"
          items:
            $ref: '#/components/schemas/SumOccupation'
    FamiliesSchema:
      type: object
      properties:
        kinship:
          type: string
          description: "Parentesco"
          example: "TITULAR"
        birthdate:
          type: string
          description: "Fecha de nacimiento en formato YYYY-MM-DD"
          example: "1983-01-01"
        insuredNumber:
          type: string
          description: "Número de Asegurados por Grupo"
          example: 11
    SumNetPremiumSchema:
      type: object
      properties:
        kinship:
          type: string
          description: "Parentesco"
          example: "TITULAR"
        netPremium:
          type: string
          description: "Prima neta"
          example: "2213.5171"
    SumOccupation:
      type: object
      properties:
        insuredSum:
          type: string
          description: "Suma Asegurada"
          example: '500000.25742'
        occupation:
          minLength: 1
          type: string
          enum:
            - ADMINISTRATIVOS
            - OPERATIVOS
            - T
            - C
            - H
            - A
            - D
          description: "Ocupación del asegurado"
          example: "ADMINISTRATIVOS"
        riskPremiumCoverage:
          type: string
          description: "Prima de riesgo Cobertura"
          example: '56465.4564'
    FindDocumentResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            fileName:
              type: string
              description: Nombre del archivo
              example: cotizacion_123456.pdf
            fileContent:
              type: string
              description: Url para descargar archivo pdf
              example: https://stmodoperativodev.blob.core.windows.net/doc-temp/Cotizacion_Vida_Grupo-c0c5de-262c-4862-9073-3123f53b.pdf
    validateRFC:
      type: object
      properties:
        isValid:
          type: boolean
          description: Bandera identifica RFC válido
          example: true
    PeopleRfcResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            personalData:
              $ref: '#/components/schemas/PeopleRfcResponsePersonalData'
            address:
              $ref: '#/components/schemas/PeopleRfcResponseAddress'
    PeopleRfcResponsePersonalData:
      type: object
      properties:
        internalIdentifier:
          type: string
          description: Número interno
          example: 29129709
        typeIdentifierId:
          type: string
          description: Tipo de indentificador
          example: 1
        typeLegalId:
          type: string
          description: Personalidad jurídica
          example: 2
        rfc:
          type: string
          description: Identificador
          example: ABN010529
        businessName:
          type: string
          description: Nombre completo
          example: ABNER ARMANDO SANCHEZ BECERRA
        name:
          type: string
          description: Primer nombre
          example: ABNER
        secondName:
          type: string
          description: Segundo nombre
          example: JOSE
        surname:
          type: string
          description: Primer apellido
          example: SANCHEZ
        secondSurname:
          type: string
          description: Segundo apellido
          example: BECERRA
        birthdate:
          type: string
          description: Fecha de nacimiento
          example: 2001-05-29
        gender:
          type: string
          description: Sexo
          example: H
        phoneNumber:
          type: string
          description: Teléfono
          example: 5562013254
        email:
          type: string
          description: Email
          example: email@segurossura.com.mx
        taxReformId:
          type: string
          description: Identificador del regimen fiscal
          example: "600"
        receiverCode:
          type: string
          description: Código postal del receptor
          example: "00001"
        curp:
          type: string
          description: Curp de la persona
          example: ABN010529DGKDKKSS
        representativeName:
          type: string
          description: Nombre del apoderado legal
          example: PEDRO PEREZ
        representativeBirthdate:
          type: string
          description: Fecha de nacimiento del apoderado legal
          example: 2001-05-29
    PeopleRfcResponseAddress:
      type: object
      properties:
        streetName:
          type: string
          description: Descripción de domicilio
          example: calle 3
        streetNumberExt:
          type: string
          description: Número de domicilio
          example: 6
        internalDepartmentNumber:
          type: string
          description: Piso
          example: 12
        abbreviationsDomicile:
          type: string
          description: Siglas domicilio
          example: NE - V
        zipCodeId:
          type: string
          description: Código postal
          example: 90000
        colonyId:
          type: string
          description: Colonia
          example: 19AJ2
        colonyDescription:
          type: string
          description: Descripción de la colonia
          example: EL FRAILE
        stateId:
          type: string
          description: Provincia del domicilio
          example: 29
        countryId:
          type: string
          description: País
          example: 052
        ordinalDomicile:
          type: integer
          format: int32
          description: Número ordinal domicilio
          example: 6
    IssueRequest:
      type: object
      required:
        - numberFolio
        - periodicityPaymentId
        - paymentMethodId
        - paymentLink
      properties:
        numberFolio:
          type: string
          description: Folio del socio
          example: 123647
        periodicityPaymentId:
          type: string
          description: Id periodicidad de pago
          example: 12
        paymentMethodId:
          type: string
          description: Id. del método de pago
          example: 3
        paymentLink:
          type: boolean
          description: Variable para identificar si se debe generar el link de pago
          example: true
        paymentLinkPhoneNumber:
          $ref: '#/components/schemas/phoneNumber'
    nameOrBusinessName:
      type: string
      description: Nombre o razon social a buscar
      example: "ACM SA"
    HistoryRequest:
      type: object
      description: Solicitud de historico de tramites
      required:
        - email
        - startDate
        - endDate
      properties:
        email:
          $ref: '#/components/schemas/agentEmail'
        userId:
          $ref: '#/components/schemas/agentUserId'
        startDate:
          type: string
          format: date
          description: Rango de fecha (inicio)
          example: "2025-01-16"
        endDate:
          type: string
          format: date
          description: Rango de fecha (fin)
          example: "2025-01-18"
        folioNumber:
          $ref: '#/components/schemas/numberFolio'
        nameOrBusinessName:
          $ref: '#/components/schemas/nameOrBusinessName'
    HistoryResponse:
      type: object
      description: Respuesta de historico de tramites
      properties:
        folio:
          $ref: '#/components/schemas/numberFolio'
        nameOrBusinessName:
          $ref: '#/components/schemas/nameOrBusinessName'
        creationDate:
          type: string
          description: Fecha/hora de creación del folio
          example: "2025-01-18"
        netPremium:
          type: string
          description: "Prima Neta"
          example: '12483.8374'
        userId:
          $ref: '#/components/schemas/agentUserId'
        branchId:
          type: string
          description: "Identificador del producto"
          example: '902'
        officeId:
          $ref: '#/components/schemas/agentOfficeId'
        name:
          $ref: '#/components/schemas/agentName'
        email:
          $ref: '#/components/schemas/agentEmail'
  responses:
    badRequestResponse:
      description: Bad request
      headers:
        strict-transport-security:
          description: 'Strict transport security header'
          schema:
            $ref: '#/components/schemas/strictTransportSecurityHeader'
        x-frame-options:
          description: 'Frame options header'
          schema:
            $ref: '#/components/schemas/xFrameOptionsHeader'
        x-content-type-options:
          description: 'Content type options header'
          schema:
            $ref: '#/components/schemas/xContentTypeOptionsHeader'
        content-security-policy:
          description: 'Content security policy header'
          schema:
            $ref: '#/components/schemas/contentSecurityPolicyHeader'
        referrer-policy:
          description: 'Referrer policy header'
          schema:
            $ref: '#/components/schemas/referrerPolicyHeader'
        permissions-policy:
          description: 'Permissions policy header'
          schema:
            $ref: '#/components/schemas/permissionsPolicyHeader'
        location:
          description: Location header
          schema:
            $ref: '#/components/schemas/locationHeader'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/standardErrorResponse'
          examples:
            'Bad Request':
              value:
                data: null
                errors:
                  - code: '400'
                    description: Bad request
                    field: field
                    traceId: 6ff801b6-ca90-11ec-9d64-0242ac120002
    unauthorizedResponse:
      description: Unauthorized
      headers:
        strict-transport-security:
          description: 'Strict transport security header'
          schema:
            $ref: '#/components/schemas/strictTransportSecurityHeader'
        x-frame-options:
          description: 'Frame options header'
          schema:
            $ref: '#/components/schemas/xFrameOptionsHeader'
        x-content-type-options:
          description: 'Content type options header'
          schema:
            $ref: '#/components/schemas/xContentTypeOptionsHeader'
        content-security-policy:
          description: 'Content security policy header'
          schema:
            $ref: '#/components/schemas/contentSecurityPolicyHeader'
        referrer-policy:
          description: 'Referrer policy header'
          schema:
            $ref: '#/components/schemas/referrerPolicyHeader'
        permissions-policy:
          description: 'Permissions policy header'
          schema:
            $ref: '#/components/schemas/permissionsPolicyHeader'
        location:
          description: Location header
          schema:
            $ref: '#/components/schemas/locationHeader'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/standardErrorResponse'
          examples:
            'Unauthorized':
              value:
                data: null
                errors:
                  - code: '401'
                    description: Unauthorized
    forbiddenResponse:
      description: Forbidden
      headers:
        strict-transport-security:
          description: 'Strict transport security header'
          schema:
            $ref: '#/components/schemas/strictTransportSecurityHeader'
        x-frame-options:
          description: 'Frame options header'
          schema:
            $ref: '#/components/schemas/xFrameOptionsHeader'
        x-content-type-options:
          description: 'Content type options header'
          schema:
            $ref: '#/components/schemas/xContentTypeOptionsHeader'
        content-security-policy:
          description: 'Content security policy header'
          schema:
            $ref: '#/components/schemas/contentSecurityPolicyHeader'
        referrer-policy:
          description: 'Referrer policy header'
          schema:
            $ref: '#/components/schemas/referrerPolicyHeader'
        permissions-policy:
          description: 'Permissions policy header'
          schema:
            $ref: '#/components/schemas/permissionsPolicyHeader'
        location:
          description: Location header
          schema:
            $ref: '#/components/schemas/locationHeader'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/standardErrorResponse'
          examples:
            'Forbidden':
              value:
                data: null
                errors:
                  - code: '403'
                    description: Forbidden
    notFoundResponse:
      description: Not found
      headers:
        strict-transport-security:
          description: 'Strict transport security header'
          schema:
            $ref: '#/components/schemas/strictTransportSecurityHeader'
        x-frame-options:
          description: 'Frame options header'
          schema:
            $ref: '#/components/schemas/xFrameOptionsHeader'
        x-content-type-options:
          description: 'Content type options header'
          schema:
            $ref: '#/components/schemas/xContentTypeOptionsHeader'
        content-security-policy:
          description: 'Content security policy header'
          schema:
            $ref: '#/components/schemas/contentSecurityPolicyHeader'
        referrer-policy:
          description: 'Referrer policy header'
          schema:
            $ref: '#/components/schemas/referrerPolicyHeader'
        permissions-policy:
          description: 'Permissions policy header'
          schema:
            $ref: '#/components/schemas/permissionsPolicyHeader'
        location:
          description: Location header
          schema:
            $ref: '#/components/schemas/locationHeader'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/standardErrorResponse'
          examples:
            'Not found':
              value:
                data: null
                errors:
                  - code: '404'
                    description: Not found
    notAcceptableResponse:
      description: Not Acceptable
      headers:
        strict-transport-security:
          description: 'Strict transport security header'
          schema:
            $ref: '#/components/schemas/strictTransportSecurityHeader'
        x-frame-options:
          description: 'Frame options header'
          schema:
            $ref: '#/components/schemas/xFrameOptionsHeader'
        x-content-type-options:
          description: 'Content type options header'
          schema:
            $ref: '#/components/schemas/xContentTypeOptionsHeader'
        content-security-policy:
          description: 'Content security policy header'
          schema:
            $ref: '#/components/schemas/contentSecurityPolicyHeader'
        referrer-policy:
          description: 'Referrer policy header'
          schema:
            $ref: '#/components/schemas/referrerPolicyHeader'
        permissions-policy:
          description: 'Permissions policy header'
          schema:
            $ref: '#/components/schemas/permissionsPolicyHeader'
        location:
          description: Location header
          schema:
            $ref: '#/components/schemas/locationHeader'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/standardErrorResponse'
          examples:
            'Not Acceptable':
              value:
                data: null
                errors:
                  - code: '406'
                    description: Not Acceptable
    payloadTooLargeResponse:
      description: Payload Too Large
      headers:
        strict-transport-security:
          description: 'Strict transport security header'
          schema:
            $ref: '#/components/schemas/strictTransportSecurityHeader'
        x-frame-options:
          description: 'Frame options header'
          schema:
            $ref: '#/components/schemas/xFrameOptionsHeader'
        x-content-type-options:
          description: 'Content type options header'
          schema:
            $ref: '#/components/schemas/xContentTypeOptionsHeader'
        content-security-policy:
          description: 'Content security policy header'
          schema:
            $ref: '#/components/schemas/contentSecurityPolicyHeader'
        referrer-policy:
          description: 'Referrer policy header'
          schema:
            $ref: '#/components/schemas/referrerPolicyHeader'
        permissions-policy:
          description: 'Permissions policy header'
          schema:
            $ref: '#/components/schemas/permissionsPolicyHeader'
        location:
          description: Location header
          schema:
            $ref: '#/components/schemas/locationHeader'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/standardErrorResponse'
          examples:
            'Payload Too Large':
              value:
                data: null
                errors:
                  - code: '413'
                    description: Unsupported Media Type
    unsupportedMediaTypeResponse:
      description: Unsupported Media Type
      headers:
        strict-transport-security:
          description: 'Strict transport security header'
          schema:
            $ref: '#/components/schemas/strictTransportSecurityHeader'
        x-frame-options:
          description: 'Frame options header'
          schema:
            $ref: '#/components/schemas/xFrameOptionsHeader'
        x-content-type-options:
          description: 'Content type options header'
          schema:
            $ref: '#/components/schemas/xContentTypeOptionsHeader'
        content-security-policy:
          description: 'Content security policy header'
          schema:
            $ref: '#/components/schemas/contentSecurityPolicyHeader'
        referrer-policy:
          description: 'Referrer policy header'
          schema:
            $ref: '#/components/schemas/referrerPolicyHeader'
        permissions-policy:
          description: 'Permissions policy header'
          schema:
            $ref: '#/components/schemas/permissionsPolicyHeader'
        location:
          description: Location header
          schema:
            $ref: '#/components/schemas/locationHeader'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/standardErrorResponse'
          examples:
            'Unsupported Media Type':
              value:
                data: null
                errors:
                  - code: '415'
                    description: Unsupported Media Type
    tooManyRequestsResponse:
      description: Too many requests
      headers:
        strict-transport-security:
          description: 'Strict transport security header'
          schema:
            $ref: '#/components/schemas/strictTransportSecurityHeader'
        x-frame-options:
          description: 'Frame options header'
          schema:
            $ref: '#/components/schemas/xFrameOptionsHeader'
        x-content-type-options:
          description: 'Content type options header'
          schema:
            $ref: '#/components/schemas/xContentTypeOptionsHeader'
        content-security-policy:
          description: 'Content security policy header'
          schema:
            $ref: '#/components/schemas/contentSecurityPolicyHeader'
        referrer-policy:
          description: 'Referrer policy header'
          schema:
            $ref: '#/components/schemas/referrerPolicyHeader'
        permissions-policy:
          description: 'Permissions policy header'
          schema:
            $ref: '#/components/schemas/permissionsPolicyHeader'
        location:
          description: Location header
          schema:
            $ref: '#/components/schemas/locationHeader'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/standardErrorResponse'
          examples:
            'Too many requests':
              value:
                data: null
                errors:
                  - code: '429'
                    description: Too many requests
    internalServerErrorResponse:
      description: Internal server error
      headers:
        strict-transport-security:
          description: 'Strict transport security header'
          schema:
            $ref: '#/components/schemas/strictTransportSecurityHeader'
        x-frame-options:
          description: 'Frame options header'
          schema:
            $ref: '#/components/schemas/xFrameOptionsHeader'
        x-content-type-options:
          description: 'Content type options header'
          schema:
            $ref: '#/components/schemas/xContentTypeOptionsHeader'
        content-security-policy:
          description: 'Content security policy header'
          schema:
            $ref: '#/components/schemas/contentSecurityPolicyHeader'
        referrer-policy:
          description: 'Referrer policy header'
          schema:
            $ref: '#/components/schemas/referrerPolicyHeader'
        permissions-policy:
          description: 'Permissions policy header'
          schema:
            $ref: '#/components/schemas/permissionsPolicyHeader'
        location:
          description: Location header
          schema:
            $ref: '#/components/schemas/locationHeader'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/standardErrorResponse'
          examples:
            'Internal server error':
              value:
                data: null
                errors:
                  - code: '500'
                    description: Internal server error
    serviceUnavailableResponse:
      description: Service unavailable
      headers:
        strict-transport-security:
          description: 'Strict transport security header'
          schema:
            $ref: '#/components/schemas/strictTransportSecurityHeader'
        x-frame-options:
          description: 'Frame options header'
          schema:
            $ref: '#/components/schemas/xFrameOptionsHeader'
        x-content-type-options:
          description: 'Content type options header'
          schema:
            $ref: '#/components/schemas/xContentTypeOptionsHeader'
        content-security-policy:
          description: 'Content security policy header'
          schema:
            $ref: '#/components/schemas/contentSecurityPolicyHeader'
        referrer-policy:
          description: 'Referrer policy header'
          schema:
            $ref: '#/components/schemas/referrerPolicyHeader'
        permissions-policy:
          description: 'Permissions policy header'
          schema:
            $ref: '#/components/schemas/permissionsPolicyHeader'
        location:
          description: Location header
          schema:
            $ref: '#/components/schemas/locationHeader'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/standardErrorResponse'
          examples:
            'Service unavailable':
              value:
                data: null
                errors:
                  - code: '503'
                    description: Service unavailable
    unexpectedErrorResponse:
      description: Unexpected error
      headers:
        strict-transport-security:
          description: 'Strict transport security header'
          schema:
            $ref: '#/components/schemas/strictTransportSecurityHeader'
        x-frame-options:
          description: 'Frame options header'
          schema:
            $ref: '#/components/schemas/xFrameOptionsHeader'
        x-content-type-options:
          description: 'Content type options header'
          schema:
            $ref: '#/components/schemas/xContentTypeOptionsHeader'
        content-security-policy:
          description: 'Content security policy header'
          schema:
            $ref: '#/components/schemas/contentSecurityPolicyHeader'
        referrer-policy:
          description: 'Referrer policy header'
          schema:
            $ref: '#/components/schemas/referrerPolicyHeader'
        permissions-policy:
          description: 'Permissions policy header'
          schema:
            $ref: '#/components/schemas/permissionsPolicyHeader'
        location:
          description: Location header
          schema:
            $ref: '#/components/schemas/locationHeader'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/standardErrorResponse'
          examples:
            'Unexpected error':
              value:
                data: null
                errors:
                  - code: '500'
                    description: Unexpected Error
  examples:
    statusResponse:
      value:
        data:
          systems:
            - system: database
              status: true
          requests:
            - request: "/resources"
              status: true'
    Component:
      value:
        {
          "numberFolio": "1006454",
          "state": {
            "key": "001",
            "value": "vida grupo"
          },
          "components": [
            {
              "key": "001",
              "value": "vida grupo"
            } ],
          "currentStep": {
            "index": "3",
            "subSteps": [ "2" ]
          }
        }
    componentResponse:
      value:
        { data: {
          "numberFolio": "1006454",
          "state": {
            "key": "001",
            "value": "vida grupo"
          },
          "components": [
            {
              "key": "001",
              "value": "vida grupo"
            } ],
          "currentStep": {
            "index": "3",
            "subSteps": [ "2" ]
          }
        }
        }
    componentRequest:
      value:
        {
          "numberFolio": "1006454",
          "state": {
            "key": "001",
            "value": "vida grupo"
          },
          "components": [
            {
              "key": "001",
              "value": "vida grupo"
            } ],
          "currentStep": {
            "index": "3",
            "subSteps": [ "2" ]
          }
        }
    recoverComponentRequest:
      value:
        token: "hjededhgw27732dbkjdbasjbd"
    FolioRequest:
      value:
        {
          "userId": "OPS$AS",
          "pointOfSaleId": "100",
          "groupId": "19",
          "subgroupId": "19",
          "rateProfileId": "2111900003",
          "name": "Luis Antonio",
          "email": "user@example.com",
          "officeId": "12er",
          "officeDescription": "AFFINITY",
          "agentId": "9625",
          "agentName": "CANAL DIRECT CLEVER",
          "promoterName": "SOCORRO GONZALEZ (AFFINITY)",
          "promoterId": "545"
        }
    SalaryRequest:
      value:
        salaries:
          - insured: "Asegurado 1"
            salary: 15234
            activity: "ADMINISTRATIVOS"
          - insured: "Asegurado 2"
            salary: 18000.5
            activity: "OPERATIVOS"
          - insured: "Asegurado 3"
            salary: 25000
            activity: "ADMINISTRATIVOS"
          - insured: "Asegurado 4"
            salary: 30000
            activity: "OPERATIVOS"
    CompanyRequest:
      value:
        {
          "plan": {
            key: "ESTANDAR",
            name: "Estándar",
            coverages: [ '00014' ]
          },
          "modality": "TRADICIONAL",
          "company": {
            "name": "Acme Corporation",
            "businessActivity": {
              "key": "key1",
              "value": "Value 1"
            },
            "averageAgeInsured": 30,
            "numAdministrativeInsured": 5,
            "numOperationalInsured": 15,
            "administrativeInsuredSum": 100000.0,
            "operationalInsuredSum": 500000.0
          }
        }
    standardResponseMessage:
      value:
        data:
          message: success
    DefaultResponseDtoListCatalogItem:
      value:
        data:
          - key: G48
            value: 'INDUSTRIA DE BATERÍAS'
          - key: G107
            value: 'TELECOMUNICACIONES'
    ListPlanResponse:
      value:
        data:
          - planKey: ESTANDAR
            planDescription: Estandar
            coverages:
              - code: ASISTENCIA_BASICA
                description: Asistencia Básica
                coverages:
                  - coverageKey: "001"
                    code: "LIFE_COVERAGE"
                    description: "Life Coverage"
                    typeCoverage: "Mandatory"
                    mandatory: true
                    insuredValidations:
                      - kinshipKey: "01"
                        kinship: "Spouse"
                        acceptableYearOldLimit:
                          min:
                            value: 32
                            unit: "YEAR"
                          max:
                            value: 32
                            unit: "YEAR"
                        insuredSumLimit:
                          - min:
                              defaultValue: 50000
                              dependencies:
                                coverageKey: "coverageKey"
                                kinshipKey: "kinshipKey"
                              formulaDescription: null
                              formula: null
                            max:
                              defaultValue: 50000
                              dependencies:
                                coverageKey: "coverageKey"
                                kinshipKey: "kinshipKey"
                              formulaDescription: null
                              formula: null
          - planKey: PLUS
            planDescription: Plus
            coverages:
              - code: ASISTENCIA_PLUS
                description: Asistencia Plus
                coverages:
                  - coverageKey: "001"
                    code: "LIFE_COVERAGE"
                    description: "Life Coverage"
                    typeCoverage: "Mandatory"
                    mandatory: true
                    insuredValidations:
                      - kinshipKey: "01"
                        kinship: "Spouse"
                        acceptableYearOldLimit:
                          min:
                            value: 32
                            unit: "YEAR"
                          max:
                            value: 32
                            unit: "YEAR"
                        insuredSumLimit:
                          - min:
                              defaultValue: 50000
                              dependencies:
                                coverageKey: "coverageKey"
                                kinshipKey: "kinshipKey"
                              formulaDescription: null
                              formula: null
                            max:
                              defaultValue: 50000
                              dependencies:
                                coverageKey: "coverageKey"
                                kinshipKey: "kinshipKey"
                              formulaDescription: null
                              formula: null
    DefaultCompanyResponse:
      value:
        {
          "data": {
            "plan": {
              key: "ESTANDAR",
              name: "Estándar",
              coverages: [ '00014' ]
            },
            "modality": "TRADICIONAL",
            "company": {
              "name": "Acme Corporation",
              "businessActivity": {
                "key": "key1",
                "value": "Value 1"
              },
              "averageAgeInsured": 30,
              "numAdministrativeInsured": 5,
              "numOperationalInsured": 15,
              "administrativeInsuredSum": 10000.0,
              "operationalInsuredSum": 50000.0
            }
          }
        }
    DefaultResponseDtoLisGroups:
      value:
        data:
          - groupNumber: 1
            name: "Group A"
            groupType: "Type 1"
            numAdministrativeInsured: 5
            numOperationalInsured: 15
            administrativeInsuredSum: 10000.0
            operationalInsuredSum: 50000.0
            insuredSum: 15700000
            salaryMonth: 12
            averageMonthlySalary: 1232.45
            coverages:
              - coverageKey: "001"
                code: "LIFE_COVERAGE"
                description: "Life Coverage"
                typeCoverage: "Mandatory"
                mandatory: true
                insuredValidations:
                  - kinshipKey: "01"
                    kinship: "Spouse"
                    acceptableYearOldLimit:
                      min:
                        value: 32
                        unit: "YEAR"
                      max:
                        value: 32
                        unit: "YEAR"
                    insuredSumLimit:
                      - min:
                          defaultValue: 50000
                          dependencies:
                            coverageKey: "coverageKey"
                            kinshipKey: "kinshipKey"
                          formulaDescription: "La suma asegurada de la cobertura muerte accidental debe ser menor o igual a la suma asegurada de la cobertura 00001."
                          formula: "({InsuredSum} <= dependencies)"
                        max:
                          defaultValue: 50000
                          dependencies:
                            coverageKey: "coverageKey"
                            kinshipKey: "kinshipKey"
                          formulaDescription: "La suma asegurada de la cobertura muerte accidental debe ser menor o igual a la suma asegurada de la cobertura 00001."
                          formula: "({InsuredSum} <= dependencies)"
                insuredSumCoverages:
                  - type: "ADMINISTRADORES"
                    insuredSum: 50000.0
    FolioResponseData:
      value:
        data:
          id:
            numberFolio: "1000483"
          createdAt: "2024-11-09T11:50:58.389"
          updatedAt: "2024-11-09T15:07:46.76"
          plan: null
          agentData:
            userId: "OPS$LALOZANO"
            pointOfSaleId: "100001"
            groupId: "05470"
            subgroupId: "0547000001"
            rateProfileId: "9020000001"
            name: "Luis Antonio"
            email: "Luis.Lozano@segurossura.com.mx"
            officeId: "1"
            officeDescription: "OFICINA MEXICO, D.F."
            agentId: "000001"
            agentName: "AGENTE DIRECTO"
            promoterName: "Alejandro Perea Mejia (METROPOLITANA)"
            promoterId: "967"
          quotationDetails:
            agentInitCommissionPercentage: 0.2
            promoterInitCommissionPercentage: 0.01
            agentCommissionPercentage: 0.2
            promoterCommissionPercentage: 0.01
            effectiveDate: "2024-11-09"
            businessDivision: "C"
            administrationType: "DETALLADA"
          modalityValidation:
            insured:
              min: 7
              max: 1000
              diffAdminOp:
                percentage: 30
                comparator: "lt"
            age:
              min: 18
              max: 69
              averageMin: 18
              averageMax: 49
            maxGroups: 10
          costs:
            totalNetPremium: 13270.9081
            totalPremium: 13570.9081
            rights: 464.564
            surcharges: 6546.5465
            vat: 1.2
          modality: "TRADICIONAL"
          company:
            name: "f"
            businessActivity:
              key: "001"
              value: "GIRO"
            averageAgeInsured: 30
            numAdministrativeInsured: 100
            numOperationalInsured: 23
            administrativeInsuredSum: 49.0
            operationalInsuredSum: 25.0
          client:
            general:
              typeLegalId: 1
              rfc: "ABC1234567899"
              birthdate: "1985-15-08"
              email: "contact@xyzcorporation.com"
              phoneNumber: "3145669080"
              name: "Alexander"
              secondName: "Arbith"
              surname: "Lopez"
              secondSurname: "Gonzales"
              curp: "PGJH010101HNGRLN04"
              gender: "M"
            address:
              streetName: "Main St"
              streetNumberExt: "123"
              internalDepartmentNumber: "B"
              zipCode: "12345"
              stateId: "Jalisco"
              municipality: "Guadalajara"
              colonyId: "Downtown"
            invoicing:
              typeLegalId: 2
              rfc: "ABC123456789"
              businessName: "ABC Inc."
              constitutionDate: "1994-11-06"
              legalRepresentativeName: "Jane Smith"
              birthdate: "2020-11-06"
              email: "billing@abcinc.com"
              phoneNumber: "3145667089"
              taxReform:
                key: "key"
                value: "Value"
              receiverCode: "12345"
            billingAddress:
              streetName: "Main St"
              streetNumberExt: "123"
              internalDepartmentNumber: "B"
              zipCode: "12345"
              stateId: "Jalisco"
              municipality: "Guadalajara"
              colonyId: "Downtown"
          status: "Abierto"
          policyData:
            policyStatus: "PENDING"
            paymentLink: true
            paymentMethodId: "3"
            createdAt: "2024-11-09T11:50:58.389"
            paymentLinkPhoneNumber: "175813754"
    CoveragesByModalityResponse:
      value:
        data:
          - coverageKey: "001"
            code: "LIFE_COVERAGE"
            description: "Life Coverage"
            typeCoverage: "Mandatory"
            mandatory: true
            display:
              type: LABEL
              color: blue
            grouped:
              title: "Familiares con gastos funerarios"
              text: "Hijos"
              siblingCoverages:
                - 9849
                - 9848
            defaultValue:
              - defaultDisplayValue: 1500000
                dependencies:
                  coverageKey: null
                  kinshipKey: null
                formulaDescription: null
                formula: null
            insuredValidations:
              - kinshipKey: "01"
                kinship: "Spouse"
                acceptableYearOldLimit:
                  min:
                    value: 32
                    unit: "YEAR"
                  max:
                    value: 32
                    unit: "YEAR"
                insuredSumLimit:
                  - min:
                      defaultValue: 50000
                      dependencies:
                        coverageKey: "coverageKey"
                        kinshipKey: "kinshipKey"
                      formulaDescription: null
                      formula: null
                    max:
                      defaultValue: 50000
                      dependencies:
                        coverageKey: "coverageKey"
                        kinshipKey: "kinshipKey"
                      formulaDescription: null
                      formula: null
                    insuredSumLimit:
                      - min:
                          defaultValue: 50000
                          dependencies:
                            coverageKey: "coverageKey"
                            kinshipKey: "kinshipKey"
                          formulaDescription: null
                          formula: null
                        max:
                          defaultValue: 50000
                          dependencies:
                            coverageKey: "coverageKey"
                            kinshipKey: "kinshipKey"
                          formulaDescription: null
                          formula: null
                coveragesInformation:
                  - type: "ADMINISTRATIVOS"
                    insuredSum: 50000.0
    GroupVgRequest:
      value:
        data:
          groupNumber: 2
          name: "Group A"
          groupType: "SA_FIJA"
          numAdministrativeInsured: 5
          numOperationalInsured: 15
          administrativeInsuredSum: 10000.0
          operationalInsuredSum: 50000.0
          salaryMonth: 12
          averageMonthlySalary: 1232.45
          insuredSumCoverages:
            - insuredSumCoverages:
                code: "00001"
                coveragesInformation:
                  - type: "ADMINISTRATIVOS"
                    insuredSum: 50000.0
    GroupVgResponse:
      value:
        data:
          - groupNumber: 2
            name: "Group A"
            groupType: "Type 1"
            numAdministrativeInsured: 5
            numOperationalInsured: 15
            administrativeInsuredSum: 10000.0
            operationalInsuredSum: 50000.0
            monthsSalary: 12
            salaries:
              - insured: "Asegurado 1"
                salary: 15234
                activity: "ADMINISTRATIVOS"
            coverages:
              - coverageKey: "001"
                code: "LIFE_COVERAGE"
                description: "Life Coverage"
                typeCoverage: "Mandatory"
                mandatory: true
                insuredValidations:
                  - kinshipKey: "01"
                    kinship: "Spouse"
                    acceptableYearOldLimit:
                      min:
                        value: 32
                        unit: "YEAR"
                      max:
                        value: 32
                        unit: "YEAR"
                    insuredSumLimit:
                      - min:
                          defaultValue: 50000
                          dependencies:
                            coverageKey: "coverageKey"
                            kinshipKey: "kinshipKey"
                          formulaDescription: null
                          formula: null
                        max:
                          defaultValue: 50000
                          dependencies:
                            coverageKey: "coverageKey"
                            kinshipKey: "kinshipKey"
                          formulaDescription: null
                          formula: null
    ClientRequestData:
      summary: "Example of ClientRequestData"
      value:
        general:
          typeLegalId: 1
          rfc: "ABC1234567895"
          birthdate: "2024-11-06"
          email: "contact@xyzcorporation.com"
          phoneNumber: "3145669080"
          name: "Alexander"
          secondName: "Arbith"
          surname: "Lopez"
          secondSurname: "Gonzales"
          curp: "PGJH010101HNGRLN04"
          gender: "M"
        address:
          streetName: "Main St"
          streetNumberExt: "123"
          internalDepartmentNumber: "B"
          zipCode: "12345"
          stateId: "Jalisco"
          municipality: "Guadalajara"
          colonyId: "Downtown"
          ordinalDomicile: 6
        invoicing:
          typeLegalId: 2
          rfc: "ABC123456789"
          businessName: "ABC Inc."
          constitutionDate: "2024-11-06"
          legalRepresentativeName: "Jane Smith"
          birthdate: "2024-11-06"
          email: "billing@abcinc.com"
          phoneNumber: "3145667089"
          taxReform:
            key: "key"
            value: "Value"
          receiverCode: "12345"
          gender: "E"
        billingAddress:
          streetName: "Main St"
          streetNumberExt: "123"
          internalDepartmentNumber: "B"
          zipCode: "44100"
          stateId: "Jalisco"
          municipality: "Guadalajara"
          colonyId: "Downtown"
          ordinalDomicile: 6
    UpdateQuotationDetailsRequest:
      value:
        effectiveDate: "2024-11-08"
        agentCommission: 0.15
    ResponseQuotationLifeGroupV2:
      value:
        {
          "data": {
            "plans": [
              {
                "namePlan": "BASICA",
                "totalNetPremium": 12483.8374,
                "totalPremium": 12783.8374,
                "periodic": {
                  "netAnnualPremium": 16018.8586,
                  "netSemiannualPremium": 8009.8586,
                  "netQuarterlyPremium": 4004.8586,
                  "netMonthlyPremium": 1334.8586,
                  "annualPaymentSurcharge": 0,
                  "semiannualPaymentSurcharge": 336.8586,
                  "quarterlyPaymentSurcharge": 260.8586,
                  "monthlyPaymentSurcharge": 100.8586,
                  "annualShippingFees": 300,
                  "semiannualShippingFees": 300,
                  "quarterlyShippingFees": 300,
                  "monthlyShippingFees": 300,
                  "totalAnnualPeriod": 16318.8586,
                  "totalSemiannualPeriod": 8645.8586,
                  "totalQuarterlyPeriod": 4565.8586,
                  "totalMonthlyPeriod": 1735.8586,
                  "firstAnnualReceipt": 18566.7208,
                  "firstSemiannualReceipt": 9816.9615,
                  "firstQuarterlyReceipt": 5163.5144,
                  "firstMonthlyReceipt": 1936.3937,
                  "subsequentAnnualReceipt": 0,
                  "subsequentSemiannualReceipt": 9516.9615,
                  "subsequentQuarterlyReceipt": 4863.5144,
                  "subsequentMonthlyReceipt": 1636.3937
                },
                "financialData": {
                  "rightPolicy": 300,
                  "fractionalSurcharge": 0,
                  "vat": 0
                },
                "policyHoldersGroups": [
                  {
                    "coverages": [
                      {
                        "coverageKey": "FALLECIMIENTO",
                        "sumOccupation": [
                          {
                            "insuredSum": 50000.0,
                            "occupation": "ADMINISTRATIVOS",
                            "riskPremiumCoverage": 0
                          },
                          {
                            "insuredSum": 50000.0,
                            "occupation": "OPERATIVOS",
                            "riskPremiumCoverage": 0
                          }
                        ]
                      }
                    ],
                    "group": 1,
                    "rule": "FIJA",
                    "insuredSum": 550000.0,
                    "policyHolders": 11,
                    "basicRiskPremium": 3096.5,
                    "optionalRiskPremium": 4581.06,
                    "netPremium": 12483.8374,
                    "administrativeSum": 4581.06,
                    "operativeSum": 0.0,
                    "salaryTotalNetPremiumAdmin": 9616.0193,
                    "salaryTotalNetPremiumOperative": 0.0,
                    "totalNetPremiumGroupAdmin": 9616.0193,
                    "totalNetPremiumGroupOperative": 0.0
                  }
                ]
              }
            ],
            "volunteer": {
              "totalNetPremium": 4029.4019,
              "totalPremium": null,
              "responsePeriodic": {
                "netAnnualPremium": 16018.8586,
                "netSemiannualPremium": 8009.8586,
                "netQuarterlyPremium": 4004.8586,
                "netMonthlyPremium": 1334.8586,
                "annualPaymentSurcharge": 0,
                "semiannualPaymentSurcharge": 336.8586,
                "quarterlyPaymentSurcharge": 260.8586,
                "monthlyPaymentSurcharge": 100.8586,
                "annualShippingFees": 300,
                "semiannualShippingFees": 300,
                "quarterlyShippingFees": 300,
                "monthlyShippingFees": 300,
                "totalAnnualPeriod": 16318.8586,
                "totalSemiannualPeriod": 8645.8586,
                "totalQuarterlyPeriod": 4565.8586,
                "totalMonthlyPeriod": 1735.8586,
                "firstAnnualReceipt": 18566.7208,
                "firstSemiannualReceipt": 9816.9615,
                "firstQuarterlyReceipt": 5163.5144,
                "firstMonthlyReceipt": 1936.3937,
                "subsequentAnnualReceipt": 0,
                "subsequentSemiannualReceipt": 9516.9615,
                "subsequentQuarterlyReceipt": 4863.5144,
                "subsequentMonthlyReceipt": 1636.3937
              },
              "paymentSurcharge": {
                "monthlySurcharge": 0.075,
                "quarterlySurcharge": 0.065,
                "semiannualSurcharge": 0.042,
                "annualSurcharge": 0
              },
              "financialDataDocument": {
                "rightPolicy": 300,
                "fractionalSurcharge": 0,
                "vat": 0
              },
              "insuredVolunteering": [
                {
                  "coverages": [
                    {
                      "coverageKey": "FALLECIMIENTO",
                      "sumOccupation": [
                        {
                          "insuredSum": 500000,
                          "occupation": "TITULAR",
                          "riskPremiumCoverage": 1016.4019
                        },
                        {
                          "insuredSum": 500000,
                          "occupation": "CONYUGE",
                          "riskPremiumCoverage": 789.4019
                        }
                      ]
                    }
                  ],
                  "numberGroup": 1,
                  "policyHolders": 9,
                  "families": [
                    {
                      "kinship": "TITULAR",
                      "birthdate": "1983-01-01",
                      "insuredNumber": 4
                    },
                    {
                      "kinship": "CONYUGE",
                      "birthdate": "1987-01-11",
                      "insuredNumber": 5
                    }
                  ],
                  "sumNetPremium": [
                    {
                      "kinship": "TITULAR",
                      "netPremium": 2213.4019
                    },
                    {
                      "kinship": "CONYUGE",
                      "netPremium": 1815.4019
                    }
                  ]
                }
              ]
            }
          }
        }
    findDocumentResponse:
      value: {
        "data": {
          "fileName": "filenet_test2.pdf",
          "fileContent": "https://stmodoperativodev.blob.core.windows.net/doc-temp/Cotizacion_Vida_Grupo-cc65de-262c-4862-9073-8312af053b.pdf"
        }
      }
    PaymentLinkResponse:
      value: {
        "data": {
          urlRedirect: "https://pagos-dev.segurossura.com.mx/short/9WOzIxRmJv",
          validity: "2025-01-16",
          success: true
        }
      }
    PaymentLinkRequest:
      value:
        numberFolio: 20000508
    validateRFCResponse:
      value:
        data:
          isValid: true
    PeopleRfcResponse:
      value: {
        "data": {
          "personalData": {
            "internalIdentifier": "29129709",
            "typeIdentifierId": "1",
            "typeLegalId": "2",
            "rfc": "ABN010529",
            "businessName": "ABNER ARMANDO SANCHEZ BECERRA",
            "name": "ABNER",
            "surname": "SANCHEZ",
            "secondSurname": "BECERRA",
            "birthdate": "2001-05-29",
            "gender": "H",
            "phoneNumber": "5562013254",
            "email": "sura@segurossura.com.mx",
            "taxReformId": "600",
            "receiverCode": "01060",
            "curp": "ABN010529DSFSF",
            "representativeName": "",
            "represantativeBirthdate": "1991-08-08"
          },
          "address": {
            "streetName": "calle 3",
            "streetNumberExt": "6",
            "internalDepartmentNumber": "12",
            "abbreviationsDomicile": "NE - V",
            "zipCodeId": "90000",
            "colonyId": "19AJ2",
            "colonyDescription": "EL FRAILE",
            "stateId": "29",
            "countryId": "052",
            "ordinalDomicile": 13
          }
        }
      }
    FolioStatusRequestExample:
      value: {
        "numSequence": "1009910",
        "payment": {
          "status": "pending"
        }
      }
    FolioStatusResponseExample:
      value: {
        "data": {
          "message": "OK"
        }
      }
    IssueRequestExample:
      value: {
        "numberFolio": "453",
        "periodicityPaymentId": "1",
        "paymentMethodId": "3",
        "paymentLink": true
      }
    HistoryRequestExample:
      value: {
        "folioNumber": 123,
        "nameOrBusinessName": "Nombre",
        "startDate": "2025-02-17",
        "endDate": "2025-02-19",
        "email": "Luis.Lozano@segurossura.com.mx"
      }
    HistoryResponseExample:
      value: {
        "paging": {
          "init": 1,
          "limit": 1
        },
        "data": [
          {
            "folio": "20000100",
            "nameOrBusinessName": "DEIMER CEGARRA",
            "creationDate": "2025-02-17 10:13:00",
            "netPremium": "10000",
            "userId": "OPS$",
            "branchId": "501",
            "officeId": "1",
            "name": "Luis Antonio",
            "email": "Luis.Lozano@segurossura.com.mx"
          }
        ]
      }