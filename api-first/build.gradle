plugins {
    id 'java'
    alias(libs.plugins.openapiGenerator)
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation libs.openapiGenerator
    implementation libs.springDoc
}

openApiGenerate {
    generatorName = "spring"
    inputSpec = "$projectDir/src/main/resources/static/open-api.yaml".toString()
    outputDir = layout.buildDirectory.dir("generated").get().toString()
    apiPackage = "co.com.nelumbo.backpmo.apifirst.openapi.api"
    invokerPackage = "co.com.nelumbo.backpmo.apifirst.openapi.invoker"
    modelPackage = "co.com.nelumbo.backpmo.apifirst.openapi.model"
    modelNameSuffix = "Dto"
    configOptions = [
        annotationLibrary    : "none",
        dateLibrary          : "java8",
        documentationProvider: "none",
        library              : "spring-boot",
        openApiNullable      : "false",
        useBeanValidation    : "true",
        useSpringBoot3       : "true",
        useSwaggerUI         : "true",
        interfaceOnly        : "true",
        serializableModel    : "true"
    ]
    globalProperties = [
        "skipFormModel": "false"
    ]
}

openApiValidate {
    inputSpec.set("$projectDir/src/main/resources/static/open-api.yaml".toString())
}

compileJava.dependsOn tasks.openApiGenerate

sourceSets {
    main {
        java {
            srcDir "${buildDir}/generated/src/main/java"
        }
    }
}
